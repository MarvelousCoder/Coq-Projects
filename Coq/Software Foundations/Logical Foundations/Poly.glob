DIGEST db2ed908a3e45fa1fdb51d0acf775af4
FPoly
R186:190 Lists <> <> lib
ind 1068:1075 <> boollist
constr 1091:1098 <> bool_nil
constr 1115:1123 <> bool_cons
R1102:1109 Poly <> boollist ind
R1131:1134 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1143:1146 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1147:1154 Poly <> boollist ind
R1135:1142 Poly <> boollist ind
R1127:1130 Basics <> bool ind
ind 1628:1631 <> list
constr 1656:1658 <> nil
constr 1673:1676 <> cons
R1662:1665 Poly <> list ind
R1681:1684 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1691:1694 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1695:1698 Poly <> list ind
R1685:1688 Poly <> list ind
R2880:2882 Poly <> nil constr
R2932:2935 Poly <> cons constr
R3793:3796 Poly <> cons constr
R3805:3808 Poly <> cons constr
R3817:3819 Poly <> nil constr
R3821:3823 Coq.Init.Datatypes <> nat ind
R3810:3812 Coq.Init.Datatypes <> nat ind
R3798:3800 Coq.Init.Datatypes <> nat ind
def 4176:4181 <> repeat
R4199:4199 Poly <> X var
R4211:4213 Coq.Init.Datatypes <> nat ind
R4218:4221 Poly <> list ind
R4223:4223 Poly <> X var
R4236:4240 Poly <> count var
R4256:4258 Poly <> nil constr
R4260:4260 Poly <> X var
R4266:4266 Coq.Init.Datatypes <> S constr
R4278:4281 Poly <> cons constr
R4288:4293 Poly <> repeat def
R4297:4297 Poly <> x var
R4295:4295 Poly <> X var
R4285:4285 Poly <> x var
R4283:4283 Poly <> X var
def 4443:4454 <> test_repeat1
R4474:4476 Coq.Init.Logic <> :type_scope:x_'='_x not
R4460:4465 Poly <> repeat def
R4467:4469 Coq.Init.Datatypes <> nat ind
R4477:4480 Poly <> cons constr
R4489:4492 Poly <> cons constr
R4501:4503 Poly <> nil constr
R4505:4507 Coq.Init.Datatypes <> nat ind
R4494:4496 Coq.Init.Datatypes <> nat ind
R4482:4484 Coq.Init.Datatypes <> nat ind
def 4667:4678 <> test_repeat2
R4703:4705 Coq.Init.Logic <> :type_scope:x_'='_x not
R4684:4689 Poly <> repeat def
R4696:4700 Basics <> false constr
R4691:4694 Basics <> bool ind
R4706:4709 Poly <> cons constr
R4723:4725 Poly <> nil constr
R4727:4730 Basics <> bool ind
R4716:4720 Basics <> false constr
R4711:4714 Basics <> bool ind
mod 4769:4781 <> MumbleGrumble
ind 4906:4911 MumbleGrumble mumble
constr 4927:4927 MumbleGrumble a
constr 4942:4942 MumbleGrumble b
constr 4974:4974 MumbleGrumble c
R4931:4936 Poly <> mumble ind
R4952:4955 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4959:4962 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4963:4968 Poly <> mumble ind
R4956:4958 Coq.Init.Datatypes <> nat ind
R4946:4951 Poly <> mumble ind
R4978:4983 Poly <> mumble ind
ind 4997:5003 MumbleGrumble grumble
constr 5028:5028 MumbleGrumble d
constr 5056:5056 MumbleGrumble e
R5038:5041 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5042:5048 Poly <> grumble ind
R5032:5037 Poly MumbleGrumble mumble ind
R5061:5064 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5065:5071 Poly <> grumble ind
R5441:5453 Poly MumbleGrumble <> mod
def 5731:5737 <> repeat'
R5751:5754 Poly <> list ind
R5756:5756 Poly <> X var
R5769:5773 Poly <> count var
R5796:5798 Poly <> nil constr
R5800:5800 Poly <> X var
R5806:5806 Coq.Init.Datatypes <> S constr
R5818:5821 Poly <> cons constr
R5828:5834 Poly <> repeat' def
R5838:5838 Poly <> x var
R5836:5836 Poly <> X var
R5825:5825 Poly <> x var
R5823:5823 Poly <> X var
R5938:5944 Poly <> repeat' def
R6000:6005 Poly <> repeat def
def 8551:8558 <> repeat''
R8572:8575 Poly <> list ind
R8577:8577 Poly <> X var
R8590:8594 Poly <> count var
R8617:8619 Poly <> nil constr
R8627:8627 Coq.Init.Datatypes <> S constr
R8639:8642 Poly <> cons constr
R8649:8656 Poly <> repeat'' def
R8660:8660 Poly <> x var
R8646:8646 Poly <> x var
def 8986:8992 <> list123
R8999:9002 Poly <> cons constr
R9011:9014 Poly <> cons constr
R9023:9026 Poly <> cons constr
R9035:9037 Poly <> nil constr
R9039:9041 Coq.Init.Datatypes <> nat ind
R9028:9030 Coq.Init.Datatypes <> nat ind
R9016:9018 Coq.Init.Datatypes <> nat ind
R9004:9006 Coq.Init.Datatypes <> nat ind
def 9115:9122 <> list123'
R9129:9132 Poly <> cons constr
R9139:9142 Poly <> cons constr
R9149:9152 Poly <> cons constr
R9159:9161 Poly <> nil constr
R9778:9780 Poly <> nil constr
R9778:9780 Poly <> nil constr
R9797:9800 Poly <> cons constr
R9797:9800 Poly <> cons constr
R9821:9826 Poly <> repeat def
R9821:9826 Poly <> repeat def
def 9913:9921 <> list123''
R9926:9929 Poly <> cons constr
R9934:9937 Poly <> cons constr
R9942:9945 Poly <> cons constr
R9949:9951 Poly <> nil constr
def 10141:10149 <> repeat'''
R10167:10167 Poly <> X var
R10179:10181 Coq.Init.Datatypes <> nat ind
R10186:10189 Poly <> list ind
R10191:10191 Poly <> X var
R10204:10208 Poly <> count var
R10231:10233 Poly <> nil constr
R10239:10239 Coq.Init.Datatypes <> S constr
R10251:10254 Poly <> cons constr
R10259:10267 Poly <> repeat''' def
R10269:10269 Poly <> x var
R10256:10256 Poly <> x var
ind 10872:10876 <> list'
constr 10901:10904 <> nil'
constr 10918:10922 <> cons'
R10908:10912 Poly <> list' ind
R10927:10930 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10936:10939 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10940:10944 Poly <> list' ind
R10931:10935 Poly <> list' ind
def 11380:11382 <> app
R11404:11407 Poly <> list ind
R11409:11409 Poly <> X var
R11428:11431 Poly <> list ind
R11433:11433 Poly <> X var
R11447:11448 Poly <> l1 var
R11459:11461 Poly <> nil constr
R11471:11472 Poly <> l2 var
R11478:11481 Poly <> cons constr
R11490:11493 Poly <> cons constr
R11498:11500 Poly <> app def
R11504:11505 Poly <> l2 var
def 11525:11527 <> rev
R11541:11544 Poly <> list ind
R11546:11546 Poly <> X var
R11551:11554 Poly <> list ind
R11556:11556 Poly <> X var
R11569:11569 Poly <> l var
R11580:11582 Poly <> nil constr
R11592:11594 Poly <> nil constr
R11600:11603 Poly <> cons constr
R11612:11614 Poly <> app def
R11625:11628 Poly <> cons constr
R11632:11634 Poly <> nil constr
R11617:11619 Poly <> rev def
def 11654:11659 <> length
R11677:11680 Poly <> list ind
R11682:11682 Poly <> X var
R11687:11689 Coq.Init.Datatypes <> nat ind
R11702:11702 Poly <> l var
R11713:11715 Poly <> nil constr
R11726:11729 Poly <> cons constr
R11739:11739 Coq.Init.Datatypes <> S constr
R11742:11747 Poly <> length def
def 11769:11777 <> test_rev1
R11808:11811 Coq.Init.Logic <> :type_scope:x_'='_x not
R11831:11831 Coq.Init.Logic <> :type_scope:x_'='_x not
R11783:11785 Poly <> rev def
R11788:11791 Poly <> cons constr
R11796:11799 Poly <> cons constr
R11803:11805 Poly <> nil constr
R11812:11815 Poly <> cons constr
R11820:11823 Poly <> cons constr
R11827:11829 Poly <> nil constr
def 11869:11877 <> test_rev2
R11901:11903 Coq.Init.Logic <> :type_scope:x_'='_x not
R11882:11884 Poly <> rev def
R11887:11890 Poly <> cons constr
R11897:11899 Poly <> nil constr
R11892:11895 Basics <> true constr
R11904:11907 Poly <> cons constr
R11914:11916 Poly <> nil constr
R11909:11912 Basics <> true constr
def 11954:11965 <> test_length1
R12005:12007 Coq.Init.Logic <> :type_scope:x_'='_x not
R11968:11973 Poly <> length def
R11976:11979 Poly <> cons constr
R11984:11987 Poly <> cons constr
R11992:11995 Poly <> cons constr
R11999:12001 Poly <> nil constr
def 12481:12485 <> mynil
R12490:12492 Poly <> nil constr
def 13059:13063 <> mynil
R13067:13070 Poly <> list ind
R13072:13074 Coq.Init.Datatypes <> nat ind
R13079:13081 Poly <> nil constr
R13210:13212 Poly <> nil constr
def 13227:13232 <> mynil'
R13238:13240 Poly <> nil constr
R13242:13244 Coq.Init.Datatypes <> nat ind
R13526:13529 Poly <> cons constr
not 13513:13513 <> ::x_'::'_x
R13611:13613 Poly <> nil constr
not 13602:13602 <> ::'['_']'
R13646:13649 Poly <> cons constr
R13657:13660 Poly <> cons constr
R13664:13665 Poly <> ::'['_']' not
not 13625:13625 <> ::'['_x_';'_'..'_';'_x_']'
R13695:13697 Poly <> app def
not 13682:13682 <> ::x_'++'_x
def 13830:13839 <> list123'''
R13844:13844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13846:13847 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13849:13850 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13852:13852 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 14160:14168 <> app_nil_r
R14198:14201 Poly <> list ind
R14203:14203 Poly <> X var
R14215:14217 Coq.Init.Logic <> :type_scope:x_'='_x not
R14209:14212 Poly <> ::x_'++'_x not
R14208:14208 Poly <> l var
R14213:14214 Poly <> ::'['_']' not
R14218:14218 Poly <> l var
prf 14321:14329 <> app_assoc
R14349:14352 Poly <> list ind
R14354:14354 Poly <> A var
R14371:14373 Coq.Init.Logic <> :type_scope:x_'='_x not
R14361:14364 Poly <> ::x_'++'_x not
R14360:14360 Poly <> l var
R14366:14369 Poly <> ::x_'++'_x not
R14365:14365 Poly <> m var
R14370:14370 Poly <> n var
R14374:14374 Poly <> ::x_'++'_x not
R14381:14385 Poly <> ::x_'++'_x not
R14376:14379 Poly <> ::x_'++'_x not
R14375:14375 Poly <> l var
R14380:14380 Poly <> m var
R14386:14386 Poly <> n var
prf 14499:14508 <> app_length
R14537:14540 Poly <> list ind
R14542:14542 Poly <> X var
R14565:14567 Coq.Init.Logic <> :type_scope:x_'='_x not
R14548:14553 Poly <> length def
R14558:14561 Poly <> ::x_'++'_x not
R14556:14557 Poly <> l1 var
R14562:14563 Poly <> l2 var
R14577:14579 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14568:14573 Poly <> length def
R14575:14576 Poly <> l1 var
R14580:14585 Poly <> length def
R14587:14588 Poly <> l2 var
prf 14838:14850 <> rev_app_distr
R14871:14874 Poly <> list ind
R14876:14876 Poly <> X var
R14896:14898 Coq.Init.Logic <> :type_scope:x_'='_x not
R14882:14884 Poly <> rev def
R14889:14892 Poly <> ::x_'++'_x not
R14887:14888 Poly <> l1 var
R14893:14894 Poly <> l2 var
R14905:14908 Poly <> ::x_'++'_x not
R14899:14901 Poly <> rev def
R14903:14904 Poly <> l2 var
R14909:14911 Poly <> rev def
R14913:14914 Poly <> l1 var
R14998:15006 Poly <> app_nil_r thm
R14998:15006 Poly <> app_nil_r thm
R14998:15006 Poly <> app_nil_r thm
R15063:15071 Poly <> app_assoc thm
R15063:15071 Poly <> app_assoc thm
R15063:15071 Poly <> app_assoc thm
prf 15101:15114 <> rev_involutive
R15146:15149 Poly <> list ind
R15151:15151 Poly <> X var
R15167:15169 Coq.Init.Logic <> :type_scope:x_'='_x not
R15156:15158 Poly <> rev def
R15161:15163 Poly <> rev def
R15165:15165 Poly <> l var
R15170:15170 Poly <> l var
R15246:15258 Poly <> rev_app_distr thm
R15246:15258 Poly <> rev_app_distr thm
R15246:15258 Poly <> rev_app_distr thm
ind 15618:15621 <> prod
constr 15648:15651 <> pair
R15656:15659 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15661:15664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R15665:15668 Poly <> prod ind
R15686:15689 Poly <> pair constr
R15686:15689 Poly <> pair constr
R15836:15839 Poly <> pair constr
not 15820:15820 <> ::'('_x_','_x_')'
R15975:15978 Poly <> prod ind
not 15963:15963 <> :type_scope:x_'*'_x
def 16577:16579 <> fst
R16600:16602 Poly <> :type_scope:x_'*'_x not
R16599:16599 Poly <> X var
R16603:16603 Poly <> Y var
R16608:16608 Poly <> X var
R16621:16621 Poly <> p var
R16632:16632 Poly <> ::'('_x_','_x_')' not
R16634:16635 Poly <> ::'('_x_','_x_')' not
R16637:16637 Poly <> ::'('_x_','_x_')' not
def 16663:16665 <> snd
R16686:16688 Poly <> :type_scope:x_'*'_x not
R16685:16685 Poly <> X var
R16689:16689 Poly <> Y var
R16694:16694 Poly <> Y var
R16707:16707 Poly <> p var
R16718:16718 Poly <> ::'('_x_','_x_')' not
R16720:16721 Poly <> ::'('_x_','_x_')' not
R16723:16723 Poly <> ::'('_x_','_x_')' not
def 16970:16976 <> combine
R16997:17000 Poly <> list ind
R17002:17002 Poly <> X var
R17011:17014 Poly <> list ind
R17016:17016 Poly <> Y var
R17032:17035 Poly <> list ind
R17039:17039 Poly <> :type_scope:x_'*'_x not
R17038:17038 Poly <> X var
R17040:17040 Poly <> Y var
R17058:17059 Poly <> ly var
R17054:17055 Poly <> lx var
R17070:17071 Poly <> ::'['_']' not
R17079:17080 Poly <> ::'['_']' not
R17089:17090 Poly <> ::'['_']' not
R17095:17096 Poly <> ::'['_']' not
R17103:17106 Poly <> ::x_'::'_x not
R17112:17115 Poly <> ::x_'::'_x not
R17128:17132 Poly <> ::x_'::'_x not
R17146:17146 Poly <> ::x_'::'_x not
R17122:17122 Poly <> ::'('_x_','_x_')' not
R17124:17125 Poly <> ::'('_x_','_x_')' not
R17127:17127 Poly <> ::'('_x_','_x_')' not
R17133:17139 Poly <> combine def
R17486:17492 Poly <> combine def
R17504:17510 Poly <> combine def
R17518:17518 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17524:17524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17530:17530 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17535:17535 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17540:17540 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17536:17539 Basics <> true constr
R17531:17534 Basics <> true constr
R17525:17529 Basics <> false constr
R17519:17523 Basics <> false constr
R17512:17512 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17514:17514 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17516:17516 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17875:17878 Poly <> list ind
def 17891:17895 <> split
R17915:17918 Poly <> list ind
R17922:17922 Poly <> :type_scope:x_'*'_x not
R17921:17921 Poly <> X var
R17923:17923 Poly <> Y var
R17944:17944 Poly <> :type_scope:x_'*'_x not
R17951:17955 Poly <> :type_scope:x_'*'_x not
R17962:17962 Poly <> :type_scope:x_'*'_x not
R17945:17948 Poly <> list ind
R17950:17950 Poly <> X var
R17956:17959 Poly <> list ind
R17961:17961 Poly <> Y var
R17975:17975 Poly <> l var
R17986:17988 Poly <> nil constr
R17996:17996 Poly <> ::'('_x_','_x_')' not
R17999:17999 Poly <> ::'('_x_','_x_')' not
R18002:18002 Poly <> ::'('_x_','_x_')' not
R17997:17998 Poly <> ::'['_']' not
R18000:18001 Poly <> ::'['_']' not
R18013:18016 Poly <> ::x_'::'_x not
R18008:18008 Poly <> ::'('_x_','_x_')' not
R18010:18010 Poly <> ::'('_x_','_x_')' not
R18012:18012 Poly <> ::'('_x_','_x_')' not
R18026:18026 Poly <> ::'('_x_','_x_')' not
R18048:18049 Poly <> ::'('_x_','_x_')' not
R18071:18071 Poly <> ::'('_x_','_x_')' not
R18028:18031 Poly <> ::x_'::'_x not
R18032:18034 Poly <> fst def
R18037:18041 Poly <> split def
R18051:18054 Poly <> ::x_'::'_x not
R18055:18057 Poly <> snd def
R18060:18064 Poly <> split def
def 18090:18099 <> test_split
R18131:18133 Coq.Init.Logic <> :type_scope:x_'='_x not
R18104:18108 Poly <> split def
R18110:18110 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18120:18120 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18130:18130 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18121:18121 Poly <> ::'('_x_','_x_')' not
R18123:18123 Poly <> ::'('_x_','_x_')' not
R18129:18129 Poly <> ::'('_x_','_x_')' not
R18124:18128 Basics <> false constr
R18111:18111 Poly <> ::'('_x_','_x_')' not
R18113:18113 Poly <> ::'('_x_','_x_')' not
R18119:18119 Poly <> ::'('_x_','_x_')' not
R18114:18118 Basics <> false constr
R18134:18134 Poly <> ::'('_x_','_x_')' not
R18140:18140 Poly <> ::'('_x_','_x_')' not
R18154:18154 Poly <> ::'('_x_','_x_')' not
R18135:18135 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18137:18137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18139:18139 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18141:18141 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18147:18147 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18153:18153 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18148:18152 Basics <> false constr
R18142:18146 Basics <> false constr
ind 18439:18444 <> option
constr 18469:18472 <> Some
constr 18494:18497 <> None
R18477:18480 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18481:18486 Poly <> option ind
R18501:18506 Poly <> option ind
R18522:18525 Poly <> Some constr
R18522:18525 Poly <> Some constr
R18544:18547 Poly <> None constr
R18544:18547 Poly <> None constr
def 18661:18669 <> nth_error
R18687:18690 Poly <> list ind
R18692:18692 Poly <> X var
R18700:18702 Coq.Init.Datatypes <> nat ind
R18726:18731 Poly <> option ind
R18733:18733 Poly <> X var
R18746:18746 Poly <> l var
R18757:18758 Poly <> ::'['_']' not
R18763:18766 Poly <> None constr
R18773:18776 Poly <> ::x_'::'_x not
R18786:18792 Basics <> beq_nat def
R18796:18796 Coq.Init.Datatypes <> O constr
R18794:18794 Poly <> n var
R18815:18823 Poly <> nth_error def
R18829:18832 Coq.Init.Peano <> pred syndef
R18834:18834 Poly <> n var
R18803:18806 Poly <> Some constr
def 18853:18867 <> test_nth_error1
R18892:18894 Coq.Init.Logic <> :type_scope:x_'='_x not
R18871:18879 Poly <> nth_error def
R18881:18881 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18883:18883 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18885:18885 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18887:18887 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18889:18889 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18895:18898 Poly <> Some constr
def 18936:18950 <> test_nth_error2
R18975:18977 Coq.Init.Logic <> :type_scope:x_'='_x not
R18954:18962 Poly <> nth_error def
R18964:18964 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18968:18968 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18972:18972 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18969:18969 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18971:18971 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18965:18965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18967:18967 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18978:18981 Poly <> Some constr
R18983:18983 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18985:18985 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 19021:19035 <> test_nth_error3
R19057:19059 Coq.Init.Logic <> :type_scope:x_'='_x not
R19039:19047 Poly <> nth_error def
R19049:19049 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19054:19054 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19050:19053 Basics <> true constr
R19060:19063 Poly <> None constr
def 19319:19326 <> hd_error
R19343:19346 Poly <> list ind
R19348:19348 Poly <> X var
R19353:19358 Poly <> option ind
R19360:19360 Poly <> X var
R19373:19373 Poly <> l var
R19384:19386 Poly <> nil constr
R19391:19394 Poly <> None constr
R19401:19404 Poly <> ::x_'::'_x not
R19411:19414 Poly <> Some constr
R19553:19560 Poly <> hd_error def
def 19572:19585 <> test_hd_error1
R19603:19605 Coq.Init.Logic <> :type_scope:x_'='_x not
R19589:19596 Poly <> hd_error def
R19598:19598 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19600:19600 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19602:19602 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19606:19609 Poly <> Some constr
def 19654:19667 <> test_hd_error2
R19690:19693 Coq.Init.Logic <> :type_scope:x_'='_x not
R19671:19678 Poly <> hd_error def
R19681:19681 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19685:19685 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19689:19689 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19686:19686 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19688:19688 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19682:19682 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19684:19684 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19694:19697 Poly <> Some constr
R19699:19699 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19701:19701 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 20395:20404 <> doit3times
R20419:20420 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20421:20421 Poly <> X var
R20418:20418 Poly <> X var
R20427:20427 Poly <> X var
R20432:20432 Poly <> X var
R20439:20439 Poly <> f var
R20442:20442 Poly <> f var
R20445:20445 Poly <> f var
R20447:20447 Poly <> n var
R20606:20615 Poly <> doit3times def
def 20687:20701 <> test_doit3times
R20725:20727 Coq.Init.Logic <> :type_scope:x_'='_x not
R20704:20713 Poly <> doit3times def
R20715:20722 Basics <> minustwo def
def 20766:20781 <> test_doit3times'
R20804:20806 Coq.Init.Logic <> :type_scope:x_'='_x not
R20784:20793 Poly <> doit3times def
R20800:20803 Basics <> true constr
R20795:20798 Basics <> negb def
R20807:20811 Basics <> false constr
def 21202:21207 <> filter
R21226:21227 Coq.Init.Logic <> :type_scope:x_'->'_x not
R21228:21231 Basics <> bool ind
R21225:21225 Poly <> X var
R21237:21240 Poly <> list ind
R21242:21242 Poly <> X var
R21264:21267 Poly <> list ind
R21269:21269 Poly <> X var
R21283:21283 Poly <> l var
R21294:21295 Poly <> ::'['_']' not
R21304:21305 Poly <> ::'['_']' not
R21312:21315 Poly <> ::x_'::'_x not
R21324:21327 Poly <> test var
R21392:21397 Poly <> filter def
R21399:21402 Poly <> test var
R21337:21341 Poly <> ::x_'::'_x not
R21355:21355 Poly <> ::x_'::'_x not
R21342:21347 Poly <> filter def
R21349:21352 Poly <> test var
def 21583:21594 <> test_filter1
R21619:21621 Coq.Init.Logic <> :type_scope:x_'='_x not
R21597:21602 Poly <> filter def
R21610:21610 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21612:21612 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21614:21614 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21616:21616 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21618:21618 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21604:21608 Basics <> evenb def
R21622:21622 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21624:21624 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21626:21626 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21667:21677 <> length_is_1
R21695:21698 Poly <> list ind
R21700:21700 Poly <> X var
R21705:21708 Basics <> bool ind
R21715:21721 Basics <> beq_nat def
R21724:21729 Poly <> length def
R21731:21731 Poly <> l var
def 21746:21757 <> test_filter2
R21832:21836 Coq.Init.Logic <> :type_scope:x_'='_x not
R21764:21769 Poly <> filter def
R21794:21795 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21802:21803 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21807:21808 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21812:21813 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21821:21822 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21825:21826 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21830:21831 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21827:21827 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21829:21829 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21823:21824 Poly <> ::'['_']' not
R21814:21814 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21816:21816 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21818:21818 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21820:21820 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21809:21809 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21811:21811 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21804:21804 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21806:21806 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21796:21796 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21798:21799 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21801:21801 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21771:21781 Poly <> length_is_1 def
R21837:21838 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21842:21843 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21847:21848 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21852:21853 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21849:21849 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21851:21851 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21844:21844 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21846:21846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21839:21839 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21841:21841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22012:22027 <> countoddmembers'
R22032:22035 Poly <> list ind
R22037:22039 Coq.Init.Datatypes <> nat ind
R22044:22046 Coq.Init.Datatypes <> nat ind
R22053:22058 Poly <> length def
R22061:22066 Poly <> filter def
R22073:22073 Poly <> l var
R22068:22071 Basics <> oddb def
def 22086:22107 <> test_countoddmembers'1
R22142:22144 Coq.Init.Logic <> :type_scope:x_'='_x not
R22112:22127 Poly <> countoddmembers' def
R22129:22129 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22131:22131 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22133:22133 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22135:22135 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22137:22137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22139:22139 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22141:22141 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22182:22203 <> test_countoddmembers'2
R22232:22234 Coq.Init.Logic <> :type_scope:x_'='_x not
R22208:22223 Poly <> countoddmembers' def
R22225:22225 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22227:22227 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22229:22229 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22231:22231 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22272:22293 <> test_countoddmembers'3
R22318:22320 Coq.Init.Logic <> :type_scope:x_'='_x not
R22298:22313 Poly <> countoddmembers' def
R22315:22317 Poly <> nil constr
def 23099:23112 <> test_anon_fun'
R23146:23148 Coq.Init.Logic <> :type_scope:x_'='_x not
R23117:23126 Poly <> doit3times def
R23139:23141 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R23138:23138 Poly <> n var
R23142:23142 Poly <> n var
def 23389:23401 <> test_filter2'
R23496:23500 Coq.Init.Logic <> :type_scope:x_'='_x not
R23408:23413 Poly <> filter def
R23458:23459 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23466:23467 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23471:23472 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23476:23477 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23485:23486 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23489:23490 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23494:23495 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23491:23491 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23493:23493 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23487:23488 Poly <> ::'['_']' not
R23478:23478 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23480:23480 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23482:23482 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23484:23484 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23473:23473 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23475:23475 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23468:23468 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23470:23470 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23460:23460 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23462:23463 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23465:23465 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23425:23431 Basics <> beq_nat def
R23434:23439 Poly <> length def
R23441:23441 Poly <> l var
R23501:23502 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23506:23507 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23511:23512 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23516:23517 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23513:23513 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23515:23515 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23508:23508 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23510:23510 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23503:23503 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23505:23505 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23814:23827 Basics <> blt_nat_flavio def
def 23842:23856 <> filter_even_gt7
R23863:23866 Poly <> list ind
R23868:23870 Coq.Init.Datatypes <> nat ind
R23875:23878 Poly <> list ind
R23880:23882 Coq.Init.Datatypes <> nat ind
R23889:23894 Poly <> filter def
R23937:23937 Poly <> l var
R23913:23916 Basics <> ::x_'&&'_x not
R23906:23910 Basics <> evenb def
R23912:23912 Poly <> l var
R23917:23930 Basics <> blt_nat_flavio def
R23934:23934 Poly <> l var
def 23949:23970 <> test_filter_even_gt7_1
R24011:24013 Coq.Init.Logic <> :type_scope:x_'='_x not
R23976:23990 Poly <> filter_even_gt7 def
R23992:23992 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23994:23994 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23996:23996 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23998:23998 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24000:24000 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24003:24003 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24005:24005 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24008:24008 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24010:24010 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24014:24014 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24017:24017 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24020:24020 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24022:24022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24066:24087 <> test_filter_even_gt7_2
R24123:24125 Coq.Init.Logic <> :type_scope:x_'='_x not
R24093:24107 Poly <> filter_even_gt7 def
R24109:24109 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24111:24111 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24113:24113 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24115:24115 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24118:24118 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24122:24122 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24126:24127 Poly <> ::'['_']' not
def 24793:24801 <> partition
R24844:24847 Coq.Init.Logic <> :type_scope:x_'->'_x not
R24848:24851 Basics <> bool ind
R24843:24843 Poly <> X var
R24880:24883 Poly <> list ind
R24885:24885 Poly <> X var
R24915:24917 Poly <> :type_scope:x_'*'_x not
R24909:24912 Poly <> list ind
R24914:24914 Poly <> X var
R24918:24921 Poly <> list ind
R24923:24923 Poly <> X var
R24936:24936 Poly <> l var
R24947:24948 Poly <> ::'['_']' not
R24953:24953 Poly <> ::'('_x_','_x_')' not
R24956:24956 Poly <> ::'('_x_','_x_')' not
R24959:24959 Poly <> ::'('_x_','_x_')' not
R24954:24955 Poly <> ::'['_']' not
R24957:24958 Poly <> ::'['_']' not
R24966:24969 Poly <> ::x_'::'_x not
R24978:24981 Poly <> test var
R25098:25098 Poly <> ::'('_x_','_x_')' not
R25112:25113 Poly <> ::'('_x_','_x_')' not
R25153:25153 Poly <> ::'('_x_','_x_')' not
R25099:25104 Poly <> filter def
R25106:25109 Poly <> test var
R25115:25119 Poly <> ::x_'::'_x not
R25152:25152 Poly <> ::x_'::'_x not
R25120:25125 Poly <> filter def
R25137:25140 Basics <> negb def
R25143:25146 Poly <> test var
R25148:25148 Poly <> t var
R24990:24990 Poly <> ::'('_x_','_x_')' not
R25011:25045 Poly <> ::'('_x_','_x_')' not
R25077:25077 Poly <> ::'('_x_','_x_')' not
R24992:24996 Poly <> ::x_'::'_x not
R25010:25010 Poly <> ::x_'::'_x not
R24997:25002 Poly <> filter def
R25004:25007 Poly <> test var
R25046:25051 Poly <> filter def
R25062:25065 Basics <> negb def
R25068:25071 Poly <> test var
R25073:25073 Poly <> t var
def 25171:25185 <> test_partition1
R25214:25216 Coq.Init.Logic <> :type_scope:x_'='_x not
R25188:25196 Poly <> partition def
R25203:25203 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25205:25205 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25207:25207 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25209:25209 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25211:25211 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25213:25213 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25198:25201 Basics <> oddb def
R25217:25217 Poly <> ::'('_x_','_x_')' not
R25225:25226 Poly <> ::'('_x_','_x_')' not
R25232:25232 Poly <> ::'('_x_','_x_')' not
R25218:25218 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25220:25220 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25222:25222 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25224:25224 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25227:25227 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25229:25229 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25231:25231 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25275:25289 <> test_partition2
R25326:25328 Coq.Init.Logic <> :type_scope:x_'='_x not
R25292:25300 Poly <> partition def
R25319:25319 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25321:25321 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25323:25323 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25325:25325 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25312:25316 Basics <> false constr
R25329:25329 Poly <> ::'('_x_','_x_')' not
R25332:25333 Poly <> ::'('_x_','_x_')' not
R25341:25341 Poly <> ::'('_x_','_x_')' not
R25330:25331 Poly <> ::'['_']' not
R25334:25334 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25336:25336 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25338:25338 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25340:25340 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25384:25398 <> test_partition3
R25428:25430 Coq.Init.Logic <> :type_scope:x_'='_x not
R25401:25409 Poly <> partition def
R25417:25417 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25419:25419 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25421:25421 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25423:25423 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25425:25425 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25427:25427 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25411:25415 Basics <> evenb def
R25431:25431 Poly <> ::'('_x_','_x_')' not
R25437:25438 Poly <> ::'('_x_','_x_')' not
R25446:25446 Poly <> ::'('_x_','_x_')' not
R25432:25432 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25434:25434 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25436:25436 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25439:25439 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25441:25441 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25443:25443 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25445:25445 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25649:25651 <> map
R25668:25669 Coq.Init.Logic <> :type_scope:x_'->'_x not
R25670:25670 Poly <> Y var
R25667:25667 Poly <> X var
R25676:25679 Poly <> list ind
R25681:25681 Poly <> X var
R25687:25690 Poly <> list ind
R25692:25692 Poly <> Y var
R25706:25706 Poly <> l var
R25717:25718 Poly <> ::'['_']' not
R25727:25728 Poly <> ::'['_']' not
R25735:25738 Poly <> ::x_'::'_x not
R25744:25744 Poly <> ::x_'::'_x not
R25748:25753 Poly <> ::x_'::'_x not
R25761:25761 Poly <> ::x_'::'_x not
R25745:25745 Poly <> f var
R25754:25756 Poly <> map def
R25758:25758 Poly <> f var
def 25978:25986 <> test_map1
R26020:26022 Coq.Init.Logic <> :type_scope:x_'='_x not
R25989:25991 Poly <> map def
R26013:26013 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26015:26015 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26017:26017 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26019:26019 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26003:26006 Coq.Init.Peano <> plus syndef
R26010:26010 Poly <> x var
R26023:26023 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26025:26025 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26027:26027 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26029:26029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 26323:26331 <> test_map2
R26354:26356 Coq.Init.Logic <> :type_scope:x_'='_x not
R26336:26338 Poly <> map def
R26345:26345 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26347:26347 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26349:26349 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26351:26351 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26353:26353 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26340:26343 Basics <> oddb def
R26357:26357 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26363:26363 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26368:26368 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26374:26374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26379:26379 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26375:26378 Basics <> true constr
R26369:26373 Basics <> false constr
R26364:26367 Basics <> true constr
R26358:26362 Basics <> false constr
def 26568:26576 <> test_map3
R26624:26628 Coq.Init.Logic <> :type_scope:x_'='_x not
R26583:26585 Poly <> map def
R26615:26615 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26617:26617 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26619:26619 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26621:26621 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26623:26623 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26597:26597 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26605:26605 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26612:26612 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26606:26609 Basics <> oddb def
R26611:26611 Poly <> n var
R26598:26602 Basics <> evenb def
R26604:26604 Poly <> n var
R26629:26629 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26642:26642 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26655:26655 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26668:26668 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26681:26681 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26669:26669 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26675:26675 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26680:26680 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26676:26679 Basics <> true constr
R26670:26674 Basics <> false constr
R26656:26656 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26661:26661 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26667:26667 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26662:26666 Basics <> false constr
R26657:26660 Basics <> true constr
R26643:26643 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26649:26649 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26654:26654 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26650:26653 Basics <> true constr
R26644:26648 Basics <> false constr
R26630:26630 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26635:26635 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26641:26641 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26636:26640 Basics <> false constr
R26631:26634 Basics <> true constr
prf 26943:26951 <> map_distr
R26980:26983 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26984:26984 Poly <> Y var
R26979:26979 Poly <> X var
R26995:26998 Poly <> list ind
R27000:27000 Poly <> X var
R27021:27023 Coq.Init.Logic <> :type_scope:x_'='_x not
R27006:27008 Poly <> map def
R27014:27017 Poly <> ::x_'++'_x not
R27013:27013 Poly <> l var
R27018:27019 Poly <> l2 var
R27010:27010 Poly <> f var
R27024:27024 Poly <> ::x_'++'_x not
R27032:27037 Poly <> ::x_'++'_x not
R27046:27046 Poly <> ::x_'++'_x not
R27025:27027 Poly <> map def
R27031:27031 Poly <> l var
R27029:27029 Poly <> f var
R27038:27040 Poly <> map def
R27044:27045 Poly <> l2 var
R27042:27042 Poly <> f var
prf 27168:27174 <> map_rev
R27204:27207 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27208:27208 Poly <> Y var
R27203:27203 Poly <> X var
R27216:27219 Poly <> list ind
R27221:27221 Poly <> X var
R27240:27242 Coq.Init.Logic <> :type_scope:x_'='_x not
R27227:27229 Poly <> map def
R27234:27236 Poly <> rev def
R27238:27238 Poly <> l var
R27231:27231 Poly <> f var
R27243:27245 Poly <> rev def
R27248:27250 Poly <> map def
R27254:27254 Poly <> l var
R27252:27252 Poly <> f var
R27342:27350 Poly <> map_distr thm
R27342:27350 Poly <> map_distr thm
R27342:27350 Poly <> map_distr thm
def 27868:27875 <> flat_map
R27892:27895 Coq.Init.Logic <> :type_scope:x_'->'_x not
R27896:27899 Poly <> list ind
R27901:27901 Poly <> Y var
R27891:27891 Poly <> X var
R27907:27910 Poly <> list ind
R27912:27912 Poly <> X var
R27937:27940 Poly <> list ind
R27942:27942 Poly <> Y var
R27956:27956 Poly <> l var
R27967:27968 Poly <> ::'['_']' not
R27973:27974 Poly <> ::'['_']' not
R27981:27984 Poly <> ::x_'::'_x not
R27990:27990 Poly <> ::x_'++'_x not
R27994:27999 Poly <> ::x_'++'_x not
R28012:28012 Poly <> ::x_'++'_x not
R27991:27991 Poly <> f var
R28000:28007 Poly <> flat_map def
R28009:28009 Poly <> f var
def 28030:28043 <> test_flat_map1
R28083:28087 Coq.Init.Logic <> :type_scope:x_'='_x not
R28048:28055 Poly <> flat_map def
R28076:28076 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28078:28078 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28080:28080 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28082:28082 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28067:28067 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28069:28069 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28071:28071 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28073:28073 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28072:28072 Poly <> n var
R28070:28070 Poly <> n var
R28068:28068 Poly <> n var
R28088:28088 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28090:28091 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28093:28094 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28096:28097 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28099:28100 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28102:28103 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28105:28106 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28108:28109 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28111:28112 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R28114:28114 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 28321:28330 <> option_map
R28351:28354 Coq.Init.Logic <> :type_scope:x_'->'_x not
R28355:28355 Poly <> Y var
R28350:28350 Poly <> X var
R28364:28369 Poly <> option ind
R28371:28371 Poly <> X var
R28398:28403 Poly <> option ind
R28405:28405 Poly <> Y var
R28418:28419 Poly <> xo var
R28432:28435 Poly <> None constr
R28440:28443 Poly <> None constr
R28451:28454 Poly <> Some constr
R28461:28464 Poly <> Some constr
R28467:28467 Poly <> f var
def 28982:28985 <> map2
R29002:29003 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29004:29004 Poly <> Y var
R29001:29001 Poly <> X var
R29010:29013 Poly <> list ind
R29015:29015 Poly <> X var
R29021:29024 Poly <> list ind
R29026:29026 Poly <> Y var
R29040:29040 Poly <> l var
R29051:29052 Poly <> ::'['_']' not
R29061:29062 Poly <> ::'['_']' not
R29069:29072 Poly <> ::x_'::'_x not
R29078:29078 Poly <> ::x_'::'_x not
R29082:29087 Poly <> ::x_'::'_x not
R29100:29100 Poly <> ::x_'::'_x not
R29079:29079 Poly <> f var
R29088:29091 Poly <> map2 def
R29097:29097 Poly <> f var
def 29118:29127 <> test_map22
R29150:29152 Coq.Init.Logic <> :type_scope:x_'='_x not
R29132:29134 Poly <> map def
R29141:29141 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29143:29143 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29145:29145 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29147:29147 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29149:29149 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29136:29139 Basics <> oddb def
R29153:29153 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29159:29159 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29164:29164 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29170:29170 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29175:29175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29171:29174 Basics <> true constr
R29165:29169 Basics <> false constr
R29160:29163 Basics <> true constr
R29154:29158 Basics <> false constr
R29211:29214 Poly <> map2 def
R29224:29226 Poly <> map def
def 29239:29245 <> filter2
R29264:29265 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29266:29269 Basics <> bool ind
R29263:29263 Poly <> X var
R29275:29278 Poly <> list ind
R29280:29280 Poly <> X var
R29302:29305 Poly <> list ind
R29307:29307 Poly <> X var
R29321:29321 Poly <> l var
R29332:29333 Poly <> ::'['_']' not
R29342:29343 Poly <> ::'['_']' not
R29350:29353 Poly <> ::x_'::'_x not
R29362:29365 Poly <> test var
R29433:29439 Poly <> filter2 def
R29443:29446 Poly <> test var
R29375:29379 Poly <> ::x_'::'_x not
R29396:29396 Poly <> ::x_'::'_x not
R29380:29386 Poly <> filter2 def
R29390:29393 Poly <> test var
R29464:29470 Poly <> filter2 def
R29480:29485 Poly <> filter def
def 29812:29815 <> fold
R29833:29834 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29836:29837 Coq.Init.Logic <> :type_scope:x_'->'_x not
R29838:29838 Poly <> Y var
R29835:29835 Poly <> Y var
R29832:29832 Poly <> X var
R29844:29847 Poly <> list ind
R29849:29849 Poly <> X var
R29855:29855 Poly <> Y var
R29885:29885 Poly <> Y var
R29898:29898 Poly <> l var
R29909:29911 Poly <> nil constr
R29916:29916 Poly <> b var
R29923:29926 Poly <> ::x_'::'_x not
R29932:29932 Poly <> f var
R29937:29940 Poly <> fold def
R29946:29946 Poly <> b var
R29942:29942 Poly <> f var
R30421:30424 Poly <> fold def
R30426:30429 Basics <> andb def
def 30491:30503 <> fold_example1
R30530:30532 Coq.Init.Logic <> :type_scope:x_'='_x not
R30509:30512 Poly <> fold def
R30519:30519 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30521:30521 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30523:30523 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30525:30525 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30527:30527 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30514:30517 Coq.Init.Peano <> mult syndef
def 30571:30583 <> fold_example2
R30626:30628 Coq.Init.Logic <> :type_scope:x_'='_x not
R30589:30592 Poly <> fold def
R30622:30625 Basics <> true constr
R30599:30599 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30604:30604 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30609:30609 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30615:30615 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30620:30620 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30616:30619 Basics <> true constr
R30610:30614 Basics <> false constr
R30605:30608 Basics <> true constr
R30600:30603 Basics <> true constr
R30594:30597 Basics <> andb def
R30629:30633 Basics <> false constr
def 30670:30682 <> fold_example3
R30719:30721 Coq.Init.Logic <> :type_scope:x_'='_x not
R30688:30691 Poly <> fold def
R30717:30718 Poly <> ::'['_']' not
R30698:30698 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30702:30702 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30705:30705 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30711:30711 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30715:30715 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30712:30712 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30714:30714 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30706:30706 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30708:30708 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30710:30710 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30703:30704 Poly <> ::'['_']' not
R30699:30699 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30701:30701 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30693:30695 Poly <> app def
R30722:30722 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30724:30724 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30726:30726 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30728:30728 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R30730:30730 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 31795:31802 <> constfun
R31818:31818 Poly <> X var
R31826:31827 Coq.Init.Logic <> :type_scope:x_'->'_x not
R31828:31828 Poly <> X var
R31823:31825 Coq.Init.Datatypes <> nat ind
R31842:31844 Coq.Init.Datatypes <> nat ind
R31850:31850 Poly <> x var
def 31865:31869 <> ftrue
R31874:31881 Poly <> constfun def
R31883:31886 Basics <> true constr
def 31898:31914 <> constfun_example1
R31925:31927 Coq.Init.Logic <> :type_scope:x_'='_x not
R31918:31922 Poly <> ftrue def
R31928:31931 Basics <> true constr
def 31968:31984 <> constfun_example2
R32003:32005 Coq.Init.Logic <> :type_scope:x_'='_x not
R31989:31996 Poly <> constfun def
R32207:32210 Coq.Init.Peano <> plus syndef
def 32821:32825 <> plus3
R32830:32833 Coq.Init.Peano <> plus syndef
R32844:32848 Poly <> plus3 def
def 32860:32869 <> test_plus3
R32883:32885 Coq.Init.Logic <> :type_scope:x_'='_x not
R32876:32880 Poly <> plus3 def
def 32923:32933 <> test_plus3'
R32957:32959 Coq.Init.Logic <> :type_scope:x_'='_x not
R32939:32948 Poly <> doit3times def
R32950:32954 Poly <> plus3 def
def 32997:33008 <> test_plus3''
R33034:33036 Coq.Init.Logic <> :type_scope:x_'='_x not
R33013:33022 Poly <> doit3times def
R33025:33028 Coq.Init.Peano <> plus syndef
mod 33177:33185 <> Exercises
def 33387:33397 Exercises fold_length
R33415:33418 Poly <> list ind
R33420:33420 Poly <> X var
R33425:33427 Coq.Init.Datatypes <> nat ind
R33434:33437 Poly <> fold def
R33456:33456 Poly <> l var
R33451:33451 Coq.Init.Datatypes <> S constr
R33453:33453 Poly <> n var
def 33470:33486 Exercises test_fold_length1
R33509:33511 Coq.Init.Logic <> :type_scope:x_'='_x not
R33490:33500 Poly Exercises fold_length def
R33502:33502 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33504:33504 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33506:33506 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33508:33508 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 33597:33615 Exercises fold_length_correct
R33633:33636 Poly <> list ind
R33638:33638 Poly <> X var
R33657:33659 Coq.Init.Logic <> :type_scope:x_'='_x not
R33644:33654 Poly Exercises fold_length def
R33656:33656 Poly <> l var
R33660:33665 Poly <> length def
R33667:33667 Poly <> l var
def 33918:33925 Exercises fold_map
R33944:33947 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33948:33948 Poly <> Y var
R33943:33943 Poly <> X var
R33956:33959 Poly <> list ind
R33961:33961 Poly <> X var
R33966:33969 Poly <> list ind
R33971:33971 Poly <> Y var
R33978:33981 Poly <> fold def
R34007:34008 Poly <> ::'['_']' not
R34005:34005 Poly <> l var
R33998:34001 Poly <> ::x_'::'_x not
R33995:33995 Poly <> f var
R33997:33997 Poly <> x var
R34002:34002 Poly <> y var
R34029:34036 Poly Exercises fold_map def
R34043:34043 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34045:34045 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34047:34047 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34049:34049 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34051:34051 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34038:34041 Basics <> oddb def
prf 34172:34187 Exercises fold_map_correct
R34217:34220 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34221:34221 Poly <> Y var
R34216:34216 Poly <> X var
R34228:34231 Poly <> list ind
R34233:34233 Poly <> X var
R34246:34248 Coq.Init.Logic <> :type_scope:x_'='_x not
R34239:34241 Poly <> map def
R34245:34245 Poly <> l var
R34243:34243 Poly <> f var
R34249:34256 Poly Exercises fold_map def
R34260:34260 Poly <> l var
R34258:34258 Poly <> f var
def 35182:35191 Exercises prod_curry
R35220:35223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35224:35224 Poly <> Z var
R35216:35218 Poly <> :type_scope:x_'*'_x not
R35215:35215 Poly <> X var
R35219:35219 Poly <> Y var
R35232:35232 Poly <> X var
R35240:35240 Poly <> Y var
R35245:35245 Poly <> Z var
R35250:35250 Poly <> f var
R35252:35252 Poly <> ::'('_x_','_x_')' not
R35254:35255 Poly <> ::'('_x_','_x_')' not
R35257:35257 Poly <> ::'('_x_','_x_')' not
R35253:35253 Poly <> x var
R35256:35256 Poly <> y var
def 35402:35413 Exercises prod_uncurry
R35438:35441 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35443:35446 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35447:35447 Poly <> Z var
R35442:35442 Poly <> Y var
R35437:35437 Poly <> X var
R35456:35458 Poly <> :type_scope:x_'*'_x not
R35455:35455 Poly <> X var
R35459:35459 Poly <> Y var
R35464:35464 Poly <> Z var
R35469:35469 Poly <> f var
R35480:35482 Poly <> snd def
R35484:35484 Poly <> p var
R35472:35474 Poly <> fst def
R35476:35476 Poly <> p var
def 35627:35635 Exercises test_map2
R35669:35671 Coq.Init.Logic <> :type_scope:x_'='_x not
R35638:35640 Poly <> map def
R35662:35662 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35664:35664 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35666:35666 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35668:35668 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35652:35655 Coq.Init.Peano <> plus syndef
R35659:35659 Poly <> x var
R35672:35672 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35674:35674 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35676:35676 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35678:35678 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R35848:35857 Poly Exercises prod_curry def
R35867:35878 Poly Exercises prod_uncurry def
prf 36136:36148 Exercises uncurry_curry
R36204:36207 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36209:36212 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36213:36213 Poly <> Z var
R36208:36208 Poly <> Y var
R36203:36203 Poly <> X var
R36278:36280 Coq.Init.Logic <> :type_scope:x_'='_x not
R36247:36256 Poly Exercises prod_curry def
R36277:36277 Poly <> y var
R36275:36275 Poly <> x var
R36259:36270 Poly Exercises prod_uncurry def
R36272:36272 Poly <> f var
R36281:36281 Poly <> f var
R36285:36285 Poly <> y var
R36283:36283 Poly <> x var
prf 36347:36359 Exercises curry_uncurry
R36414:36414 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36420:36424 Coq.Init.Logic <> :type_scope:x_'->'_x not
R36425:36425 Poly <> Z var
R36416:36418 Poly <> :type_scope:x_'*'_x not
R36415:36415 Poly <> X var
R36419:36419 Poly <> Y var
R36434:36436 Poly <> :type_scope:x_'*'_x not
R36433:36433 Poly <> X var
R36437:36437 Poly <> Y var
R36472:36474 Coq.Init.Logic <> :type_scope:x_'='_x not
R36443:36454 Poly Exercises prod_uncurry def
R36471:36471 Poly <> p var
R36457:36466 Poly Exercises prod_curry def
R36468:36468 Poly <> f var
R36475:36475 Poly <> f var
R36477:36477 Poly <> p var
mod 37796:37801 <> Exercises.Church
def 37815:37817 Exercises.Church nat
R37839:37839 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37846:37850 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37852:37855 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37856:37856 Poly <> X var
R37851:37851 Poly <> X var
R37841:37844 Coq.Init.Logic <> :type_scope:x_'->'_x not
R37845:37845 Poly <> X var
R37840:37840 Poly <> X var
def 38012:38014 Exercises.Church one
R38018:38020 Poly Exercises.Church nat def
R38048:38051 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38052:38052 Poly <> X var
R38047:38047 Poly <> X var
R38060:38060 Poly <> X var
R38066:38066 Poly <> f var
R38068:38068 Poly <> x var
def 38148:38150 Exercises.Church two
R38154:38156 Poly Exercises.Church nat def
R38184:38187 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38188:38188 Poly <> X var
R38183:38183 Poly <> X var
R38196:38196 Poly <> X var
R38202:38202 Poly <> f var
R38205:38205 Poly <> f var
R38207:38207 Poly <> x var
def 38387:38390 Exercises.Church zero
R38394:38396 Poly Exercises.Church nat def
R38424:38427 Coq.Init.Logic <> :type_scope:x_'->'_x not
R38428:38428 Poly <> X var
R38423:38423 Poly <> X var
R38436:38436 Poly <> X var
R38442:38442 Poly <> x var
def 38717:38721 Exercises.Church three
R38725:38727 Poly Exercises.Church nat def
R38733:38742 Poly <> doit3times def
def 38950:38953 Exercises.Church succ
R38960:38962 Poly Exercises.Church nat def
R38967:38969 Poly Exercises.Church nat def
R38998:39001 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39002:39002 Poly <> X var
R38997:38997 Poly <> X var
R39010:39010 Poly <> X var
R39016:39016 Poly <> f var
R39019:39019 Poly <> n var
R39025:39025 Poly <> x var
R39023:39023 Poly <> f var
R39021:39021 Poly <> X var
R39047:39050 Poly Exercises.Church succ def
R39052:39054 Poly Exercises.Church two def
def 39067:39072 Exercises.Church succ_1
R39085:39087 Coq.Init.Logic <> :type_scope:x_'='_x not
R39076:39079 Poly Exercises.Church succ def
R39081:39084 Poly Exercises.Church zero def
R39088:39090 Poly Exercises.Church one def
def 39134:39139 Exercises.Church succ_2
R39151:39153 Coq.Init.Logic <> :type_scope:x_'='_x not
R39143:39146 Poly Exercises.Church succ def
R39148:39150 Poly Exercises.Church one def
R39154:39156 Poly Exercises.Church two def
def 39193:39198 Exercises.Church succ_3
R39210:39212 Coq.Init.Logic <> :type_scope:x_'='_x not
R39202:39205 Poly Exercises.Church succ def
R39207:39209 Poly Exercises.Church two def
R39213:39217 Poly Exercises.Church three def
def 39298:39301 Exercises.Church plus
R39310:39312 Poly Exercises.Church nat def
R39317:39319 Poly Exercises.Church nat def
R39347:39350 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39351:39351 Poly <> X var
R39346:39346 Poly <> X var
R39359:39359 Poly <> X var
R39365:39365 Poly <> m var
R39372:39372 Poly <> n var
R39378:39378 Poly <> x var
R39376:39376 Poly <> f var
R39374:39374 Poly <> X var
R39369:39369 Poly <> f var
R39367:39367 Poly <> X var
R39400:39403 Poly Exercises.Church plus def
R39410:39412 Poly Exercises.Church one def
R39405:39408 Poly Exercises.Church zero def
R39433:39436 Poly Exercises.Church plus def
R39442:39444 Poly Exercises.Church one def
R39438:39440 Poly Exercises.Church one def
R39465:39468 Poly Exercises.Church plus def
R39474:39476 Poly Exercises.Church one def
R39470:39472 Poly Exercises.Church two def
def 39489:39494 Exercises.Church plus_1
R39511:39513 Coq.Init.Logic <> :type_scope:x_'='_x not
R39498:39501 Poly Exercises.Church plus def
R39508:39510 Poly Exercises.Church one def
R39503:39506 Poly Exercises.Church zero def
R39514:39516 Poly Exercises.Church one def
def 39553:39558 Exercises.Church plus_2
R39576:39578 Coq.Init.Logic <> :type_scope:x_'='_x not
R39562:39565 Poly Exercises.Church plus def
R39571:39575 Poly Exercises.Church three def
R39567:39569 Poly Exercises.Church two def
R39579:39582 Poly Exercises.Church plus def
R39590:39592 Poly Exercises.Church two def
R39584:39588 Poly Exercises.Church three def
def 39629:39634 Exercises.Church plus_3
R39665:39667 Coq.Init.Logic <> :type_scope:x_'='_x not
R39640:39643 Poly Exercises.Church plus def
R39660:39664 Poly Exercises.Church three def
R39646:39649 Poly Exercises.Church plus def
R39655:39657 Poly Exercises.Church two def
R39651:39653 Poly Exercises.Church two def
R39668:39671 Poly Exercises.Church plus def
R39678:39681 Poly Exercises.Church plus def
R39689:39693 Poly Exercises.Church three def
R39683:39687 Poly Exercises.Church three def
R39673:39675 Poly Exercises.Church one def
def 39790:39793 Exercises.Church mult
R39802:39804 Poly Exercises.Church nat def
R39809:39811 Poly Exercises.Church nat def
R39840:39843 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39844:39844 Poly <> X var
R39839:39839 Poly <> X var
R39852:39852 Poly <> X var
R39858:39858 Poly <> n var
R39870:39870 Poly <> x var
R39863:39863 Poly <> m var
R39867:39867 Poly <> f var
R39865:39865 Poly <> X var
R39860:39860 Poly <> X var
R39892:39895 Poly Exercises.Church mult def
R39901:39903 Poly Exercises.Church one def
R39897:39899 Poly Exercises.Church one def
R39924:39927 Poly Exercises.Church mult def
R39933:39935 Poly Exercises.Church two def
R39929:39931 Poly Exercises.Church two def
R39956:39959 Poly Exercises.Church mult def
R39965:39967 Poly Exercises.Church two def
R39961:39963 Poly Exercises.Church one def
R39988:39991 Poly Exercises.Church mult def
R39998:40000 Poly Exercises.Church two def
R39993:39996 Poly Exercises.Church zero def
R40021:40024 Poly Exercises.Church mult def
R40030:40034 Poly Exercises.Church three def
R40026:40028 Poly Exercises.Church one def
def 40048:40053 Exercises.Church mult_1
R40069:40071 Coq.Init.Logic <> :type_scope:x_'='_x not
R40057:40060 Poly Exercises.Church mult def
R40066:40068 Poly Exercises.Church one def
R40062:40064 Poly Exercises.Church one def
R40072:40074 Poly Exercises.Church one def
def 40111:40116 Exercises.Church mult_2
R40148:40150 Coq.Init.Logic <> :type_scope:x_'='_x not
R40120:40123 Poly Exercises.Church mult def
R40131:40134 Poly Exercises.Church plus def
R40142:40146 Poly Exercises.Church three def
R40136:40140 Poly Exercises.Church three def
R40125:40128 Poly Exercises.Church zero def
R40151:40154 Poly Exercises.Church zero def
def 40191:40196 Exercises.Church mult_3
R40214:40216 Coq.Init.Logic <> :type_scope:x_'='_x not
R40200:40203 Poly Exercises.Church mult def
R40209:40213 Poly Exercises.Church three def
R40205:40207 Poly Exercises.Church two def
R40217:40220 Poly Exercises.Church plus def
R40228:40232 Poly Exercises.Church three def
R40222:40226 Poly Exercises.Church three def
def 40551:40553 Exercises.Church exp
R40562:40564 Poly Exercises.Church nat def
R40569:40571 Poly Exercises.Church nat def
R40599:40602 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40603:40603 Poly <> X var
R40598:40598 Poly <> X var
R40611:40611 Poly <> X var
R40617:40617 Poly <> m var
R40636:40636 Poly <> x var
R40634:40634 Poly <> f var
R40629:40629 Poly <> n var
R40631:40631 Poly <> X var
R40621:40624 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40625:40625 Poly <> X var
R40620:40620 Poly <> X var
def 40648:40652 Exercises.Church exp_1
R40667:40669 Coq.Init.Logic <> :type_scope:x_'='_x not
R40656:40658 Poly Exercises.Church exp def
R40664:40666 Poly Exercises.Church two def
R40660:40662 Poly Exercises.Church two def
R40670:40673 Poly Exercises.Church plus def
R40679:40681 Poly Exercises.Church two def
R40675:40677 Poly Exercises.Church two def
def 40718:40722 Exercises.Church exp_2
R40739:40741 Coq.Init.Logic <> :type_scope:x_'='_x not
R40726:40728 Poly Exercises.Church exp def
R40736:40738 Poly Exercises.Church two def
R40730:40734 Poly Exercises.Church three def
R40742:40745 Poly Exercises.Church plus def
R40773:40775 Poly Exercises.Church one def
R40748:40751 Poly Exercises.Church mult def
R40758:40761 Poly Exercises.Church mult def
R40767:40769 Poly Exercises.Church two def
R40763:40765 Poly Exercises.Church two def
R40753:40755 Poly Exercises.Church two def
def 40812:40816 Exercises.Church exp_3
R40834:40836 Coq.Init.Logic <> :type_scope:x_'='_x not
R40820:40822 Poly Exercises.Church exp def
R40830:40833 Poly Exercises.Church zero def
R40824:40828 Poly Exercises.Church three def
R40837:40839 Poly Exercises.Church one def
R40872:40877 Poly Exercises.Church <> mod
R40895:40903 Poly Exercises <> mod
