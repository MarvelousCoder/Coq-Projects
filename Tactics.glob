DIGEST 9f004555c604ef9a74d85f267c0c7567
FTactics
R612:615 Poly <> <> lib
prf 891:896 <> silly1
R918:920 Coq.Init.Datatypes <> nat ind
R934:943 Coq.Init.Logic <> :type_scope:x_'->'_x not
R957:965 Coq.Init.Logic <> :type_scope:x_'->'_x not
R971:973 Coq.Init.Logic <> :type_scope:x_'='_x not
R966:966 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R968:968 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R970:970 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R969:969 Tactics <> o var
R967:967 Tactics <> n var
R974:974 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R976:976 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R978:978 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R977:977 Tactics <> p var
R975:975 Tactics <> m var
R949:951 Coq.Init.Logic <> :type_scope:x_'='_x not
R944:944 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R946:946 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R948:948 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R947:947 Tactics <> o var
R945:945 Tactics <> n var
R952:952 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R954:954 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R956:956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R955:955 Tactics <> p var
R953:953 Tactics <> n var
R930:932 Coq.Init.Logic <> :type_scope:x_'='_x not
R929:929 Tactics <> n var
R933:933 Tactics <> m var
prf 1502:1507 <> silly2
R1529:1531 Coq.Init.Datatypes <> nat ind
R1545:1554 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1555:1555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1598:1607 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1613:1615 Coq.Init.Logic <> :type_scope:x_'='_x not
R1608:1608 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1610:1610 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1612:1612 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1611:1611 Tactics <> o var
R1609:1609 Tactics <> n var
R1616:1616 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1618:1618 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1620:1620 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1619:1619 Tactics <> p var
R1617:1617 Tactics <> m var
R1570:1572 Coq.Init.Datatypes <> nat ind
R1581:1584 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1590:1592 Coq.Init.Logic <> :type_scope:x_'='_x not
R1585:1585 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1587:1587 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1589:1589 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1588:1588 Tactics <> o var
R1586:1586 Tactics <> q var
R1593:1593 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1595:1595 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1597:1597 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1596:1596 Tactics <> p var
R1594:1594 Tactics <> r var
R1577:1579 Coq.Init.Logic <> :type_scope:x_'='_x not
R1576:1576 Tactics <> q var
R1580:1580 Tactics <> r var
R1541:1543 Coq.Init.Logic <> :type_scope:x_'='_x not
R1540:1540 Tactics <> n var
R1544:1544 Tactics <> m var
prf 2287:2293 <> silly2a
R2311:2313 Coq.Init.Datatypes <> nat ind
R2335:2344 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2345:2345 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2392:2401 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2405:2407 Coq.Init.Logic <> :type_scope:x_'='_x not
R2402:2402 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2404:2404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2403:2403 Tactics <> n var
R2408:2408 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2410:2410 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2409:2409 Tactics <> m var
R2360:2362 Coq.Init.Datatypes <> nat ind
R2379:2382 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2386:2388 Coq.Init.Logic <> :type_scope:x_'='_x not
R2383:2383 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2385:2385 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2384:2384 Tactics <> q var
R2389:2389 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2391:2391 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2390:2390 Tactics <> r var
R2371:2373 Coq.Init.Logic <> :type_scope:x_'='_x not
R2366:2366 Poly <> ::'('_x_','_x_')' not
R2368:2368 Poly <> ::'('_x_','_x_')' not
R2370:2370 Poly <> ::'('_x_','_x_')' not
R2367:2367 Tactics <> q var
R2369:2369 Tactics <> q var
R2374:2374 Poly <> ::'('_x_','_x_')' not
R2376:2376 Poly <> ::'('_x_','_x_')' not
R2378:2378 Poly <> ::'('_x_','_x_')' not
R2375:2375 Tactics <> r var
R2377:2377 Tactics <> r var
R2327:2329 Coq.Init.Logic <> :type_scope:x_'='_x not
R2322:2322 Poly <> ::'('_x_','_x_')' not
R2324:2324 Poly <> ::'('_x_','_x_')' not
R2326:2326 Poly <> ::'('_x_','_x_')' not
R2323:2323 Tactics <> n var
R2325:2325 Tactics <> n var
R2330:2330 Poly <> ::'('_x_','_x_')' not
R2332:2332 Poly <> ::'('_x_','_x_')' not
R2334:2334 Poly <> ::'('_x_','_x_')' not
R2331:2331 Tactics <> m var
R2333:2333 Tactics <> m var
prf 2593:2600 <> silly_ex
R2609:2609 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2655:2664 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2679:2687 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2694:2696 Coq.Init.Logic <> :type_scope:x_'='_x not
R2688:2691 Basics <> oddb def
R2697:2700 Basics <> true constr
R2672:2674 Coq.Init.Logic <> :type_scope:x_'='_x not
R2665:2669 Basics <> evenb def
R2675:2678 Basics <> true constr
R2634:2637 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2648:2650 Coq.Init.Logic <> :type_scope:x_'='_x not
R2638:2641 Basics <> oddb def
R2644:2644 Coq.Init.Datatypes <> S constr
R2646:2646 Tactics <> n var
R2651:2654 Basics <> true constr
R2627:2629 Coq.Init.Logic <> :type_scope:x_'='_x not
R2620:2624 Basics <> evenb def
R2626:2626 Tactics <> n var
R2630:2633 Basics <> true constr
prf 2976:2990 <> silly3_firsttry
R3006:3008 Coq.Init.Datatypes <> nat ind
R3035:3044 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3064:3066 Coq.Init.Logic <> :type_scope:x_'='_x not
R3045:3051 Basics <> beq_nat def
R3054:3054 Coq.Init.Datatypes <> S constr
R3057:3057 Coq.Init.Datatypes <> S constr
R3059:3059 Tactics <> n var
R3067:3070 Basics <> true constr
R3021:3023 Coq.Init.Logic <> :type_scope:x_'='_x not
R3017:3020 Basics <> true constr
R3024:3030 Basics <> beq_nat def
R3032:3032 Tactics <> n var
prf 3619:3631 <> rev_exercise1
R3650:3653 Poly <> list ind
R3655:3657 Coq.Init.Datatypes <> nat ind
R3676:3684 Coq.Init.Logic <> :type_scope:x_'->'_x not
R3687:3689 Coq.Init.Logic <> :type_scope:x_'='_x not
R3685:3686 Tactics <> l' var
R3690:3692 Poly <> rev def
R3694:3694 Tactics <> l var
R3667:3669 Coq.Init.Logic <> :type_scope:x_'='_x not
R3666:3666 Tactics <> l var
R3670:3672 Poly <> rev def
R3674:3675 Tactics <> l' var
R3744:3746 Poly <> rev def
R3749:3751 Poly <> rev def
R3744:3746 Poly <> rev def
R3749:3751 Poly <> rev def
R3802:3815 Poly <> rev_involutive thm
R3802:3815 Poly <> rev_involutive thm
def 4460:4475 <> trans_eq_example
R4501:4503 Coq.Init.Datatypes <> nat ind
R4525:4533 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4547:4555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4561:4563 Coq.Init.Logic <> :type_scope:x_'='_x not
R4556:4556 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4558:4558 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4560:4560 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4559:4559 Tactics <> b var
R4557:4557 Tactics <> a var
R4564:4564 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4566:4566 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4568:4568 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4567:4567 Tactics <> f var
R4565:4565 Tactics <> e var
R4539:4541 Coq.Init.Logic <> :type_scope:x_'='_x not
R4534:4534 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4536:4536 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4538:4538 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4537:4537 Tactics <> d var
R4535:4535 Tactics <> c var
R4542:4542 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4544:4544 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4546:4546 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4545:4545 Tactics <> f var
R4543:4543 Tactics <> e var
R4517:4519 Coq.Init.Logic <> :type_scope:x_'='_x not
R4512:4512 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4514:4514 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4516:4516 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4515:4515 Tactics <> b var
R4513:4513 Tactics <> a var
R4520:4520 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4522:4522 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4524:4524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4523:4523 Tactics <> d var
R4521:4521 Tactics <> c var
prf 4825:4832 <> trans_eq
R4861:4861 Tactics <> X var
R4872:4875 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4881:4884 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4886:4888 Coq.Init.Logic <> :type_scope:x_'='_x not
R4885:4885 Tactics <> n var
R4889:4889 Tactics <> o var
R4877:4879 Coq.Init.Logic <> :type_scope:x_'='_x not
R4876:4876 Tactics <> m var
R4880:4880 Tactics <> o var
R4868:4870 Coq.Init.Logic <> :type_scope:x_'='_x not
R4867:4867 Tactics <> n var
R4871:4871 Tactics <> m var
def 5144:5160 <> trans_eq_example'
R5186:5188 Coq.Init.Datatypes <> nat ind
R5210:5218 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5232:5240 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5246:5248 Coq.Init.Logic <> :type_scope:x_'='_x not
R5241:5241 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5243:5243 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5245:5245 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5244:5244 Tactics <> b var
R5242:5242 Tactics <> a var
R5249:5249 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5251:5251 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5253:5253 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5252:5252 Tactics <> f var
R5250:5250 Tactics <> e var
R5224:5226 Coq.Init.Logic <> :type_scope:x_'='_x not
R5219:5219 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5221:5221 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5223:5223 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5222:5222 Tactics <> d var
R5220:5220 Tactics <> c var
R5227:5227 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5229:5229 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5231:5231 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5230:5230 Tactics <> f var
R5228:5228 Tactics <> e var
R5202:5204 Coq.Init.Logic <> :type_scope:x_'='_x not
R5197:5197 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5199:5199 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5201:5201 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5200:5200 Tactics <> b var
R5198:5198 Tactics <> a var
R5205:5205 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5207:5207 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5209:5209 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5208:5208 Tactics <> d var
R5206:5206 Tactics <> c var
R5724:5724 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5726:5726 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5728:5728 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5706:5713 Tactics <> trans_eq thm
R5724:5724 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5726:5726 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5728:5728 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5706:5713 Tactics <> trans_eq thm
def 6060:6076 <> trans_eq_exercise
R6098:6100 Coq.Init.Datatypes <> nat ind
R6125:6133 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6145:6153 Coq.Init.Logic <> :type_scope:x_'->'_x not
R6154:6154 Coq.Init.Logic <> :type_scope:x_'='_x not
R6160:6164 Coq.Init.Logic <> :type_scope:x_'='_x not
R6175:6175 Coq.Init.Logic <> :type_scope:x_'='_x not
R6156:6158 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6155:6155 Tactics <> n var
R6159:6159 Tactics <> p var
R6165:6172 Basics <> minustwo def
R6174:6174 Tactics <> o var
R6134:6134 Coq.Init.Logic <> :type_scope:x_'='_x not
R6140:6143 Coq.Init.Logic <> :type_scope:x_'='_x not
R6136:6138 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6135:6135 Tactics <> n var
R6139:6139 Tactics <> p var
R6144:6144 Tactics <> m var
R6110:6113 Coq.Init.Logic <> :type_scope:x_'='_x not
R6124:6124 Coq.Init.Logic <> :type_scope:x_'='_x not
R6109:6109 Tactics <> m var
R6114:6121 Basics <> minustwo def
R6123:6123 Tactics <> o var
R6219:6226 Tactics <> trans_eq thm
R6219:6226 Tactics <> trans_eq thm
prf 7751:7761 <> S_injective
R7779:7781 Coq.Init.Datatypes <> nat ind
R7796:7801 Coq.Init.Logic <> :type_scope:x_'->'_x not
R7803:7805 Coq.Init.Logic <> :type_scope:x_'='_x not
R7802:7802 Tactics <> n var
R7806:7806 Tactics <> m var
R7790:7792 Coq.Init.Logic <> :type_scope:x_'='_x not
R7787:7787 Coq.Init.Datatypes <> S constr
R7789:7789 Tactics <> n var
R7793:7793 Coq.Init.Datatypes <> S constr
R7795:7795 Tactics <> m var
prf 8301:8313 <> inversion_ex1
R8333:8335 Coq.Init.Datatypes <> nat ind
R8356:8361 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8365:8367 Coq.Init.Logic <> :type_scope:x_'='_x not
R8362:8362 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8364:8364 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8363:8363 Tactics <> n var
R8368:8368 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8370:8370 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8369:8369 Tactics <> m var
R8347:8349 Coq.Init.Logic <> :type_scope:x_'='_x not
R8341:8341 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8343:8344 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8346:8346 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8345:8345 Tactics <> m var
R8342:8342 Tactics <> n var
R8350:8350 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8352:8353 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8355:8355 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8354:8354 Tactics <> o var
R8351:8351 Tactics <> o var
prf 8528:8540 <> inversion_ex2
R8558:8560 Coq.Init.Datatypes <> nat ind
R8575:8580 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8582:8584 Coq.Init.Logic <> :type_scope:x_'='_x not
R8581:8581 Tactics <> n var
R8585:8585 Tactics <> m var
R8569:8571 Coq.Init.Logic <> :type_scope:x_'='_x not
R8566:8566 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8568:8568 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8567:8567 Tactics <> n var
R8572:8572 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8574:8574 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8573:8573 Tactics <> m var
def 8707:8719 <> inversion_ex3
R8750:8750 Tactics <> X var
R8760:8763 Poly <> list ind
R8765:8765 Tactics <> X var
R8791:8796 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8812:8817 Coq.Init.Logic <> :type_scope:x_'->'_x not
R8819:8821 Coq.Init.Logic <> :type_scope:x_'='_x not
R8818:8818 Tactics <> x var
R8822:8822 Tactics <> y var
R8803:8805 Coq.Init.Logic <> :type_scope:x_'='_x not
R8798:8801 Poly <> ::x_'::'_x not
R8797:8797 Tactics <> y var
R8802:8802 Tactics <> l var
R8807:8810 Poly <> ::x_'::'_x not
R8806:8806 Tactics <> x var
R8811:8811 Tactics <> j var
R8782:8784 Coq.Init.Logic <> :type_scope:x_'='_x not
R8772:8775 Poly <> ::x_'::'_x not
R8771:8771 Tactics <> x var
R8777:8780 Poly <> ::x_'::'_x not
R8776:8776 Tactics <> y var
R8781:8781 Tactics <> l var
R8786:8789 Poly <> ::x_'::'_x not
R8785:8785 Tactics <> z var
R8790:8790 Tactics <> j var
R8906:8913 Tactics <> trans_eq thm
R8906:8913 Tactics <> trans_eq thm
prf 9172:9182 <> beq_nat_0_l
R9217:9220 Coq.Init.Logic <> :type_scope:x_'->'_x not
R9222:9224 Coq.Init.Logic <> :type_scope:x_'='_x not
R9221:9221 Tactics <> n var
R9210:9212 Coq.Init.Logic <> :type_scope:x_'='_x not
R9199:9205 Basics <> beq_nat def
R9209:9209 Tactics <> n var
R9213:9216 Basics <> true constr
prf 10132:10144 <> inversion_ex4
R10160:10162 Coq.Init.Datatypes <> nat ind
R10175:10180 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10186:10188 Coq.Init.Logic <> :type_scope:x_'='_x not
R10182:10184 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R10171:10173 Coq.Init.Logic <> :type_scope:x_'='_x not
R10168:10168 Coq.Init.Datatypes <> S constr
R10170:10170 Tactics <> n var
R10174:10174 Coq.Init.Datatypes <> O constr
prf 10250:10262 <> inversion_ex5
R10280:10282 Coq.Init.Datatypes <> nat ind
R10300:10305 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10309:10311 Coq.Init.Logic <> :type_scope:x_'='_x not
R10306:10306 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10308:10308 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10307:10307 Tactics <> n var
R10312:10312 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10314:10314 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10313:10313 Tactics <> m var
R10293:10295 Coq.Init.Logic <> :type_scope:x_'='_x not
R10288:10292 Basics <> false constr
R10296:10299 Basics <> true constr
def 10826:10838 <> inversion_ex6
R10895:10895 Tactics <> X var
R10905:10908 Poly <> list ind
R10910:10910 Tactics <> X var
R10932:10937 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10953:10958 Coq.Init.Logic <> :type_scope:x_'->'_x not
R10960:10962 Coq.Init.Logic <> :type_scope:x_'='_x not
R10959:10959 Tactics <> x var
R10963:10963 Tactics <> z var
R10944:10946 Coq.Init.Logic <> :type_scope:x_'='_x not
R10939:10942 Poly <> ::x_'::'_x not
R10938:10938 Tactics <> y var
R10943:10943 Tactics <> l var
R10948:10951 Poly <> ::x_'::'_x not
R10947:10947 Tactics <> z var
R10952:10952 Tactics <> j var
R10927:10929 Coq.Init.Logic <> :type_scope:x_'='_x not
R10917:10920 Poly <> ::x_'::'_x not
R10916:10916 Tactics <> x var
R10922:10925 Poly <> ::x_'::'_x not
R10921:10921 Tactics <> y var
R10926:10926 Tactics <> l var
R10930:10931 Poly <> ::'['_']' not
prf 12138:12144 <> f_equal
R12173:12176 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12177:12177 Tactics <> B var
R12172:12172 Tactics <> A var
R12186:12186 Tactics <> A var
R12197:12200 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12204:12206 Coq.Init.Logic <> :type_scope:x_'='_x not
R12201:12201 Tactics <> f var
R12203:12203 Tactics <> x var
R12207:12207 Tactics <> f var
R12209:12209 Tactics <> y var
R12193:12195 Coq.Init.Logic <> :type_scope:x_'='_x not
R12192:12192 Tactics <> x var
R12196:12196 Tactics <> y var
prf 12712:12716 <> S_inj
R12734:12736 Coq.Init.Datatypes <> nat ind
R12744:12747 Basics <> bool ind
R12779:12788 Coq.Init.Logic <> :type_scope:x_'->'_x not
R12800:12802 Coq.Init.Logic <> :type_scope:x_'='_x not
R12789:12795 Basics <> beq_nat def
R12799:12799 Tactics <> m var
R12797:12797 Tactics <> n var
R12803:12803 Tactics <> b var
R12775:12777 Coq.Init.Logic <> :type_scope:x_'='_x not
R12756:12762 Basics <> beq_nat def
R12771:12771 Coq.Init.Datatypes <> S constr
R12773:12773 Tactics <> m var
R12765:12765 Coq.Init.Datatypes <> S constr
R12767:12767 Tactics <> n var
R12778:12778 Tactics <> b var
prf 13641:13647 <> silly3'
R13663:13665 Coq.Init.Datatypes <> nat ind
R13671:13671 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13720:13726 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13745:13751 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13756:13758 Coq.Init.Logic <> :type_scope:x_'='_x not
R13752:13755 Basics <> true constr
R13759:13765 Basics <> beq_nat def
R13768:13768 Coq.Init.Datatypes <> S constr
R13771:13771 Coq.Init.Datatypes <> S constr
R13773:13773 Tactics <> n var
R13731:13733 Coq.Init.Logic <> :type_scope:x_'='_x not
R13727:13730 Basics <> true constr
R13734:13740 Basics <> beq_nat def
R13742:13742 Tactics <> n var
R13690:13693 Coq.Init.Logic <> :type_scope:x_'->'_x not
R13713:13715 Coq.Init.Logic <> :type_scope:x_'='_x not
R13694:13700 Basics <> beq_nat def
R13703:13703 Coq.Init.Datatypes <> S constr
R13706:13706 Coq.Init.Datatypes <> S constr
R13708:13708 Tactics <> n var
R13716:13719 Basics <> true constr
R13683:13685 Coq.Init.Logic <> :type_scope:x_'='_x not
R13672:13678 Basics <> beq_nat def
R13680:13680 Tactics <> n var
R13686:13689 Basics <> true constr
prf 14655:14672 <> plus_n_n_injective
R14706:14714 Coq.Init.Logic <> :type_scope:x_'->'_x not
R14716:14718 Coq.Init.Logic <> :type_scope:x_'='_x not
R14715:14715 Tactics <> n var
R14719:14719 Tactics <> m var
R14698:14700 Coq.Init.Logic <> :type_scope:x_'='_x not
R14694:14696 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14693:14693 Tactics <> n var
R14697:14697 Tactics <> n var
R14702:14704 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R14701:14701 Tactics <> m var
R14705:14705 Tactics <> m var
R14941:14949 Induction <> plus_n_Sm thm
R14941:14949 Induction <> plus_n_Sm thm
R14941:14949 Induction <> plus_n_Sm thm
R14977:14985 Induction <> plus_n_Sm thm
R14977:14985 Induction <> plus_n_Sm thm
R14977:14985 Induction <> plus_n_Sm thm
R15056:15062 Tactics <> f_equal thm
R15056:15062 Tactics <> f_equal thm
prf 16008:16030 <> double_injective_FAILED
R16070:16078 Coq.Init.Logic <> :type_scope:x_'->'_x not
R16080:16082 Coq.Init.Logic <> :type_scope:x_'='_x not
R16079:16079 Tactics <> n var
R16083:16083 Tactics <> m var
R16059:16061 Coq.Init.Logic <> :type_scope:x_'='_x not
R16051:16056 Induction <> double def
R16058:16058 Tactics <> n var
R16062:16067 Induction <> double def
R16069:16069 Tactics <> m var
R16363:16369 Tactics <> f_equal thm
R16363:16369 Tactics <> f_equal thm
prf 18605:18620 <> double_injective
R18660:18668 Coq.Init.Logic <> :type_scope:x_'->'_x not
R18670:18672 Coq.Init.Logic <> :type_scope:x_'='_x not
R18669:18669 Tactics <> n var
R18673:18673 Tactics <> m var
R18649:18651 Coq.Init.Logic <> :type_scope:x_'='_x not
R18641:18646 Induction <> double def
R18648:18648 Tactics <> n var
R18652:18657 Induction <> double def
R18659:18659 Tactics <> m var
R19546:19552 Tactics <> f_equal thm
R19546:19552 Tactics <> f_equal thm
prf 20453:20464 <> beq_nat_true
R20502:20505 Coq.Init.Logic <> :type_scope:x_'->'_x not
R20507:20509 Coq.Init.Logic <> :type_scope:x_'='_x not
R20506:20506 Tactics <> n var
R20510:20510 Tactics <> m var
R20495:20497 Coq.Init.Logic <> :type_scope:x_'='_x not
R20484:20490 Basics <> beq_nat def
R20494:20494 Tactics <> m var
R20492:20492 Tactics <> n var
R20498:20501 Basics <> true constr
prf 22129:22157 <> double_injective_take2_FAILED
R22197:22205 Coq.Init.Logic <> :type_scope:x_'->'_x not
R22207:22209 Coq.Init.Logic <> :type_scope:x_'='_x not
R22206:22206 Tactics <> n var
R22210:22210 Tactics <> m var
R22186:22188 Coq.Init.Logic <> :type_scope:x_'='_x not
R22178:22183 Induction <> double def
R22185:22185 Tactics <> n var
R22189:22194 Induction <> double def
R22196:22196 Tactics <> m var
R22490:22496 Tactics <> f_equal thm
R22490:22496 Tactics <> f_equal thm
prf 23432:23453 <> double_injective_take2
R23493:23501 Coq.Init.Logic <> :type_scope:x_'->'_x not
R23503:23505 Coq.Init.Logic <> :type_scope:x_'='_x not
R23502:23502 Tactics <> n var
R23506:23506 Tactics <> m var
R23482:23484 Coq.Init.Logic <> :type_scope:x_'='_x not
R23474:23479 Induction <> double def
R23481:23481 Tactics <> n var
R23485:23490 Induction <> double def
R23492:23492 Tactics <> m var
R23969:23975 Tactics <> f_equal thm
R23969:23975 Tactics <> f_equal thm
prf 26175:26185 <> beq_id_true
R26220:26223 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26225:26227 Coq.Init.Logic <> :type_scope:x_'='_x not
R26224:26224 Tactics <> x var
R26228:26228 Tactics <> y var
R26213:26215 Coq.Init.Logic <> :type_scope:x_'='_x not
R26203:26208 Lists <> beq_id def
R26212:26212 Tactics <> y var
R26210:26210 Tactics <> x var
R26216:26219 Basics <> true constr
R26289:26291 Coq.Init.Logic <> :type_scope:x_'='_x not
R26289:26291 Coq.Init.Logic <> :type_scope:x_'='_x not
R26304:26315 Tactics <> beq_nat_true thm
R26304:26315 Tactics <> beq_nat_true thm
prf 26473:26492 <> nth_error_after_last
R26507:26509 Coq.Init.Datatypes <> nat ind
R26528:26531 Poly <> list ind
R26533:26533 Tactics <> X var
R26554:26562 Coq.Init.Logic <> :type_scope:x_'->'_x not
R26576:26578 Coq.Init.Logic <> :type_scope:x_'='_x not
R26563:26571 Poly <> nth_error def
R26575:26575 Tactics <> n var
R26573:26573 Tactics <> l var
R26579:26582 Poly <> None constr
R26550:26552 Coq.Init.Logic <> :type_scope:x_'='_x not
R26542:26547 Poly <> length def
R26549:26549 Tactics <> l var
R26553:26553 Tactics <> n var
def 27237:27242 <> square
R27250:27252 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27249:27249 Tactics <> n var
R27253:27253 Tactics <> n var
prf 27324:27334 <> square_mult
R27364:27366 Coq.Init.Logic <> :type_scope:x_'='_x not
R27350:27355 Tactics <> square def
R27359:27361 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27358:27358 Tactics <> n var
R27362:27362 Tactics <> m var
R27375:27377 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R27367:27372 Tactics <> square def
R27374:27374 Tactics <> n var
R27378:27383 Tactics <> square def
R27385:27385 Tactics <> m var
R27702:27707 Tactics <> square def
R28032:28041 Induction <> mult_assoc thm
R28032:28041 Induction <> mult_assoc thm
R28032:28041 Induction <> mult_assoc thm
R28067:28069 Coq.Init.Logic <> :type_scope:x_'='_x not
R28063:28065 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28059:28061 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28075:28077 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28071:28073 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28067:28069 Coq.Init.Logic <> :type_scope:x_'='_x not
R28063:28065 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28059:28061 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28075:28077 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28071:28073 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R28094:28102 Induction <> mult_comm thm
R28094:28102 Induction <> mult_comm thm
R28094:28102 Induction <> mult_comm thm
R28111:28120 Induction <> mult_assoc thm
R28111:28120 Induction <> mult_assoc thm
R28146:28155 Induction <> mult_assoc thm
R28146:28155 Induction <> mult_assoc thm
R28146:28155 Induction <> mult_assoc thm
def 28543:28545 <> foo
R28551:28553 Coq.Init.Datatypes <> nat ind
prf 28766:28777 <> silly_fact_1
R28800:28802 Coq.Init.Logic <> :type_scope:x_'='_x not
R28796:28798 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28791:28793 Tactics <> foo def
R28795:28795 Tactics <> m var
R28814:28816 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28803:28805 Tactics <> foo def
R28809:28811 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R28808:28808 Tactics <> m var
def 29047:29049 <> bar
R29064:29064 Tactics <> x var
R29075:29075 Coq.Init.Datatypes <> O constr
R29086:29086 Coq.Init.Datatypes <> S constr
prf 29160:29178 <> silly_fact_2_FAILED
R29201:29203 Coq.Init.Logic <> :type_scope:x_'='_x not
R29197:29199 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29192:29194 Tactics <> bar def
R29196:29196 Tactics <> m var
R29215:29217 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29204:29206 Tactics <> bar def
R29210:29212 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R29209:29209 Tactics <> m var
prf 30206:30217 <> silly_fact_2
R30240:30242 Coq.Init.Logic <> :type_scope:x_'='_x not
R30236:30238 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30231:30233 Tactics <> bar def
R30235:30235 Tactics <> m var
R30254:30256 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30243:30245 Tactics <> bar def
R30249:30251 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30248:30248 Tactics <> m var
prf 30604:30616 <> silly_fact_2'
R30639:30641 Coq.Init.Logic <> :type_scope:x_'='_x not
R30635:30637 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30630:30632 Tactics <> bar def
R30634:30634 Tactics <> m var
R30653:30655 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30642:30644 Tactics <> bar def
R30648:30650 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R30647:30647 Tactics <> m var
R30687:30689 Tactics <> bar def
def 31333:31340 <> sillyfun
R31347:31349 Coq.Init.Datatypes <> nat ind
R31354:31357 Basics <> bool ind
R31367:31373 Basics <> beq_nat def
R31375:31375 Tactics <> n var
R31400:31406 Basics <> beq_nat def
R31408:31408 Tactics <> n var
R31430:31434 Basics <> false constr
R31417:31421 Basics <> false constr
R31384:31388 Basics <> false constr
prf 31446:31459 <> sillyfun_false
R31475:31477 Coq.Init.Datatypes <> nat ind
R31493:31495 Coq.Init.Logic <> :type_scope:x_'='_x not
R31483:31490 Tactics <> sillyfun def
R31492:31492 Tactics <> n var
R31496:31500 Basics <> false constr
R31529:31536 Tactics <> sillyfun def
R31551:31557 Basics <> beq_nat def
R31551:31557 Basics <> beq_nat def
R31651:31657 Basics <> beq_nat def
R31651:31657 Basics <> beq_nat def
prf 32456:32468 <> combine_split
R32488:32491 Poly <> list ind
R32495:32497 Poly <> :type_scope:x_'*'_x not
R32494:32494 Tactics <> X var
R32498:32498 Tactics <> Y var
R32529:32534 Coq.Init.Logic <> :type_scope:x_'->'_x not
R32548:32550 Coq.Init.Logic <> :type_scope:x_'='_x not
R32535:32541 Poly <> combine def
R32546:32547 Tactics <> l2 var
R32543:32544 Tactics <> l1 var
R32551:32551 Tactics <> l var
R32518:32520 Coq.Init.Logic <> :type_scope:x_'='_x not
R32511:32515 Poly <> split def
R32517:32517 Tactics <> l var
R32521:32521 Poly <> ::'('_x_','_x_')' not
R32524:32525 Poly <> ::'('_x_','_x_')' not
R32528:32528 Poly <> ::'('_x_','_x_')' not
R32522:32523 Tactics <> l1 var
R32526:32527 Tactics <> l2 var
R32818:32822 Poly <> split def
R32818:32822 Poly <> split def
def 33124:33132 <> sillyfun1
R33139:33141 Coq.Init.Datatypes <> nat ind
R33146:33149 Basics <> bool ind
R33159:33165 Basics <> beq_nat def
R33167:33167 Tactics <> n var
R33191:33197 Basics <> beq_nat def
R33199:33199 Tactics <> n var
R33220:33224 Basics <> false constr
R33208:33211 Basics <> true constr
R33176:33179 Basics <> true constr
prf 33483:33502 <> sillyfun1_odd_FAILED
R33518:33520 Coq.Init.Datatypes <> nat ind
R33547:33555 Coq.Init.Logic <> :type_scope:x_'->'_x not
R33562:33564 Coq.Init.Logic <> :type_scope:x_'='_x not
R33556:33559 Basics <> oddb def
R33561:33561 Tactics <> n var
R33565:33568 Basics <> true constr
R33540:33542 Coq.Init.Logic <> :type_scope:x_'='_x not
R33529:33537 Tactics <> sillyfun1 def
R33539:33539 Tactics <> n var
R33543:33546 Basics <> true constr
R33600:33608 Tactics <> sillyfun1 def
R33629:33635 Basics <> beq_nat def
R33629:33635 Basics <> beq_nat def
prf 34485:34497 <> sillyfun1_odd
R34513:34515 Coq.Init.Datatypes <> nat ind
R34542:34550 Coq.Init.Logic <> :type_scope:x_'->'_x not
R34557:34559 Coq.Init.Logic <> :type_scope:x_'='_x not
R34551:34554 Basics <> oddb def
R34556:34556 Tactics <> n var
R34560:34563 Basics <> true constr
R34535:34537 Coq.Init.Logic <> :type_scope:x_'='_x not
R34524:34532 Tactics <> sillyfun1 def
R34534:34534 Tactics <> n var
R34538:34541 Basics <> true constr
R34595:34603 Tactics <> sillyfun1 def
R34624:34630 Basics <> beq_nat def
R34624:34630 Basics <> beq_nat def
R34879:34890 Tactics <> beq_nat_true thm
R34879:34890 Tactics <> beq_nat_true thm
R35177:35183 Basics <> beq_nat def
R35177:35183 Basics <> beq_nat def
R35243:35254 Tactics <> beq_nat_true thm
R35243:35254 Tactics <> beq_nat_true thm
prf 35418:35439 <> bool_fn_applied_thrice
R35461:35464 Coq.Init.Logic <> :type_scope:x_'->'_x not
R35465:35468 Basics <> bool ind
R35457:35460 Basics <> bool ind
R35476:35479 Basics <> bool ind
R35496:35498 Coq.Init.Logic <> :type_scope:x_'='_x not
R35485:35485 Tactics <> f var
R35488:35488 Tactics <> f var
R35491:35491 Tactics <> f var
R35493:35493 Tactics <> b var
R35499:35499 Tactics <> f var
R35501:35501 Tactics <> b var
R35553:35556 Basics <> true constr
R35553:35556 Basics <> true constr
R35629:35633 Basics <> false constr
R35629:35633 Basics <> false constr
R35700:35704 Basics <> false constr
R35700:35704 Basics <> false constr
R35735:35738 Basics <> true constr
R35735:35738 Basics <> true constr
prf 38101:38111 <> beq_nat_sym
R38129:38131 Coq.Init.Datatypes <> nat ind
R38148:38150 Coq.Init.Logic <> :type_scope:x_'='_x not
R38137:38143 Basics <> beq_nat def
R38147:38147 Tactics <> m var
R38145:38145 Tactics <> n var
R38151:38157 Basics <> beq_nat def
R38161:38161 Tactics <> n var
R38159:38159 Tactics <> m var
R38351:38357 Basics <> beq_nat def
R38360:38360 Coq.Init.Datatypes <> S constr
R38351:38357 Basics <> beq_nat def
R38360:38360 Coq.Init.Datatypes <> S constr
R38392:38403 Tactics <> beq_nat_true thm
R38392:38403 Tactics <> beq_nat_true thm
R38451:38462 Induction <> beq_nat_refl thm
R38451:38462 Induction <> beq_nat_refl thm
R38483:38489 Basics <> beq_nat def
R38494:38494 Coq.Init.Datatypes <> S constr
R38483:38489 Basics <> beq_nat def
R38494:38494 Coq.Init.Datatypes <> S constr
R38526:38537 Tactics <> beq_nat_true thm
R38526:38537 Tactics <> beq_nat_true thm
R38643:38654 Induction <> beq_nat_refl thm
R38643:38654 Induction <> beq_nat_refl thm
prf 39676:39688 <> beq_nat_trans
R39726:39731 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39750:39755 Coq.Init.Logic <> :type_scope:x_'->'_x not
R39767:39769 Coq.Init.Logic <> :type_scope:x_'='_x not
R39756:39762 Basics <> beq_nat def
R39766:39766 Tactics <> p var
R39764:39764 Tactics <> n var
R39770:39773 Basics <> true constr
R39743:39745 Coq.Init.Logic <> :type_scope:x_'='_x not
R39732:39738 Basics <> beq_nat def
R39742:39742 Tactics <> p var
R39740:39740 Tactics <> m var
R39746:39749 Basics <> true constr
R39719:39721 Coq.Init.Logic <> :type_scope:x_'='_x not
R39708:39714 Basics <> beq_nat def
R39718:39718 Tactics <> m var
R39716:39716 Tactics <> n var
R39722:39725 Basics <> true constr
R39827:39838 Tactics <> beq_nat_true thm
R39827:39838 Tactics <> beq_nat_true thm
def 40601:40623 <> split_combine_statement
R40743:40746 Poly <> list ind
R40748:40748 Tactics <> X var
R40757:40760 Poly <> list ind
R40762:40762 Tactics <> Y var
R40791:40794 Coq.Init.Logic <> :type_scope:x_'->'_x not
R40816:40818 Coq.Init.Logic <> :type_scope:x_'='_x not
R40795:40799 Poly <> split def
R40802:40808 Poly <> combine def
R40813:40814 Tactics <> l2 var
R40810:40811 Tactics <> l1 var
R40819:40819 Poly <> ::'('_x_','_x_')' not
R40822:40823 Poly <> ::'('_x_','_x_')' not
R40826:40826 Poly <> ::'('_x_','_x_')' not
R40820:40821 Tactics <> l1 var
R40824:40825 Tactics <> l2 var
R40779:40781 Coq.Init.Logic <> :type_scope:x_'='_x not
R40770:40775 Poly <> length def
R40777:40778 Tactics <> l1 var
R40782:40787 Poly <> length def
R40789:40790 Tactics <> l2 var
prf 40838:40850 <> split_combine
R40854:40876 Tactics <> split_combine_statement def
prf 41313:41327 <> filter_exercise
R41358:41361 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41362:41365 Basics <> bool ind
R41357:41357 Tactics <> X var
R41402:41402 Tactics <> X var
R41413:41416 Poly <> list ind
R41418:41418 Tactics <> X var
R41450:41458 Coq.Init.Logic <> :type_scope:x_'->'_x not
R41465:41467 Coq.Init.Logic <> :type_scope:x_'='_x not
R41459:41462 Tactics <> test var
R41464:41464 Tactics <> x var
R41468:41471 Basics <> true constr
R41440:41442 Coq.Init.Logic <> :type_scope:x_'='_x not
R41427:41432 Poly <> filter def
R41439:41439 Tactics <> l var
R41434:41437 Tactics <> test var
R41444:41447 Poly <> ::x_'::'_x not
R41443:41443 Tactics <> x var
R41448:41449 Tactics <> lf var
def 42603:42609 <> forallb
R42629:42632 Coq.Init.Logic <> :type_scope:x_'->'_x not
R42633:42636 Basics <> bool ind
R42628:42628 Tactics <> X var
R42643:42646 Poly <> list ind
R42648:42648 Tactics <> X var
R42653:42656 Basics <> bool ind
R42669:42669 Tactics <> l var
R42680:42681 Poly <> ::'['_']' not
R42686:42689 Basics <> true constr
R42699:42702 Poly <> ::x_'::'_x not
R42711:42714 Basics <> andb def
R42729:42735 Tactics <> forallb def
R42737:42740 Tactics <> test var
R42717:42720 Tactics <> test var
def 42764:42771 <> forallb1
R42798:42800 Coq.Init.Logic <> :type_scope:x_'='_x not
R42774:42780 Tactics <> forallb def
R42787:42787 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42789:42789 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42791:42791 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42793:42793 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42795:42795 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42797:42797 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42782:42785 Basics <> oddb def
R42801:42804 Basics <> true constr
def 42847:42854 <> forallb2
R42883:42885 Coq.Init.Logic <> :type_scope:x_'='_x not
R42857:42863 Tactics <> forallb def
R42870:42870 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42876:42876 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42882:42882 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42877:42881 Basics <> false constr
R42871:42875 Basics <> false constr
R42865:42868 Basics <> negb def
R42886:42889 Basics <> true constr
def 42932:42939 <> forallb3
R42965:42967 Coq.Init.Logic <> :type_scope:x_'='_x not
R42942:42948 Tactics <> forallb def
R42956:42956 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42958:42958 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42960:42960 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42962:42962 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42964:42964 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R42950:42954 Basics <> evenb def
R42968:42972 Basics <> false constr
def 43015:43022 <> forallb4
R43047:43049 Coq.Init.Logic <> :type_scope:x_'='_x not
R43025:43031 Tactics <> forallb def
R43045:43046 Poly <> ::'['_']' not
R43034:43040 Basics <> beq_nat def
R43050:43053 Basics <> true constr
def 43098:43104 <> existsb
R43124:43127 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43128:43131 Basics <> bool ind
R43123:43123 Tactics <> X var
R43138:43141 Poly <> list ind
R43143:43143 Tactics <> X var
R43148:43151 Basics <> bool ind
R43164:43164 Tactics <> l var
R43175:43176 Poly <> ::'['_']' not
R43181:43185 Basics <> false constr
R43193:43196 Poly <> ::x_'::'_x not
R43205:43207 Basics <> orb def
R43220:43226 Tactics <> existsb def
R43228:43231 Tactics <> test var
R43210:43213 Tactics <> test var
def 43255:43262 <> existsb1
R43294:43296 Coq.Init.Logic <> :type_scope:x_'='_x not
R43265:43271 Tactics <> existsb def
R43285:43285 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43287:43287 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43289:43289 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43291:43291 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43293:43293 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43274:43280 Basics <> beq_nat def
R43297:43301 Basics <> false constr
def 43344:43351 <> existsb2
R43391:43393 Coq.Init.Logic <> :type_scope:x_'='_x not
R43354:43360 Tactics <> existsb def
R43374:43374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43379:43379 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43384:43384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43390:43390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43385:43389 Basics <> false constr
R43380:43383 Basics <> true constr
R43375:43378 Basics <> true constr
R43363:43366 Basics <> andb def
R43368:43371 Basics <> true constr
R43394:43397 Basics <> true constr
def 43440:43447 <> existsb3
R43476:43478 Coq.Init.Logic <> :type_scope:x_'='_x not
R43450:43456 Tactics <> existsb def
R43463:43463 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43465:43465 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43467:43467 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43469:43469 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43471:43471 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43473:43473 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43475:43475 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43458:43461 Basics <> oddb def
R43479:43482 Basics <> true constr
def 43525:43532 <> existsb4
R43551:43553 Coq.Init.Logic <> :type_scope:x_'='_x not
R43535:43541 Tactics <> existsb def
R43549:43550 Poly <> ::'['_']' not
R43543:43547 Basics <> evenb def
R43554:43558 Basics <> false constr
def 43605:43612 <> existsb'
R43632:43635 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43636:43639 Basics <> bool ind
R43631:43631 Tactics <> X var
R43646:43649 Poly <> list ind
R43651:43651 Tactics <> X var
R43656:43659 Basics <> bool ind
R43666:43669 Basics <> negb def
R43672:43678 Tactics <> forallb def
R43705:43705 Tactics <> l var
R43690:43693 Basics <> negb def
R43696:43699 Tactics <> test var
R43701:43701 Tactics <> x var
def 43719:43727 <> existsb'1
R43760:43762 Coq.Init.Logic <> :type_scope:x_'='_x not
R43730:43737 Tactics <> existsb' def
R43751:43751 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43753:43753 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43755:43755 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43757:43757 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43759:43759 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43740:43746 Basics <> beq_nat def
R43763:43767 Basics <> false constr
R43820:43827 Tactics <> existsb' def
R43841:43841 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43846:43846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43851:43851 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43857:43857 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R43852:43856 Basics <> false constr
R43847:43850 Basics <> true constr
R43842:43845 Basics <> true constr
R43830:43833 Basics <> andb def
R43835:43838 Basics <> true constr
prf 43870:43885 <> existsb_existsb'
R43913:43916 Coq.Init.Logic <> :type_scope:x_'->'_x not
R43917:43920 Basics <> bool ind
R43912:43912 Tactics <> X var
R43927:43930 Poly <> list ind
R43932:43932 Tactics <> X var
R43952:43954 Coq.Init.Logic <> :type_scope:x_'='_x not
R43938:43944 Tactics <> existsb def
R43951:43951 Tactics <> l var
R43946:43949 Tactics <> test var
R43955:43962 Tactics <> existsb' def
R43969:43969 Tactics <> l var
R43964:43967 Tactics <> test var
R44032:44039 Tactics <> existsb' def
